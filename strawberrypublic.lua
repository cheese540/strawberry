--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v69=0;while true do if (v69==0) then v19=v0(v3(v30,1,1));return "";end end else local v70=0;local v71;while true do if (v70==0) then v71=v2(v0(v30,16));if v19 then local v105=0;local v106;while true do if (v105==0) then v106=v5(v71,v19);v19=nil;v105=1;end if (v105==1) then return v106;end end else return v71;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v72=0;local v73;while true do if (v72==(0 + 0)) then v73=(v31/((2 -0)^(v32-1)))%((233 -(29 + 202))^(((v33-(1 + 0 + 0)) -(v32-(1 + (0 -0)))) + 1)) ;return v73-(v73%((777 -(542 + 234)) -0)) ;end end else local v74=1708 -(871 + 837) ;local v75;while true do if (v74==(0 -0)) then v75=(3 -1)^(v32-(3 -2)) ;return (((v31%(v75 + v75))>=v75) and 1) or (0 -0) ;end end end end local function v21()local v34=1307 -(524 + 783) ;local v35;while true do if (v34==1) then return v35;end if (v34==((541 + 1189) -(1601 + 129))) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 ;v34=1;end end end local function v22()local v36=0;local v37;local v38;while true do if ((0 + 0)==v36) then v37,v38=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (1570 -(36 + 1532)) ;v36=3 -2 ;end if (v36==(1514 -(411 + 1102))) then return (v38 * (604 -348)) + v37 ;end end end local function v23()local v39,v40,v41,v42=v1(v16,v18,v18 + (987 -(4 + 21 + (2413 -(551 + 903)))) );v18=v18 + 4 + 0 ;return (v42 * (3142225 + 13634991)) + (v41 * (66521 -(94 + 891))) + (v40 * (622 -(195 + 18 + 153))) + v39 ;end local function v24()local v43=v23();local v44=v23();local v45=1 + 0 + 0 ;local v46=(v20(v44,2 -1 ,46 -26 ) * ((1 + 1)^(74 -42))) + v43 ;local v47=v20(v44,9 + 12 ,818 -((1678 -(1026 + 435)) + 570) );local v48=((v20(v44,32)==(1 + 0)) and  -1) or (345 -(340 + 4)) ;if (v47==(0 -0)) then if (v46==((460 + 764) -(621 + 603))) then return v48 * (642 -(160 + 482)) ;else local v79=1344 -((2245 -1125) + 224) ;while true do if (0==v79) then v47=1 + 0 ;v45=(1785 -(543 + 826)) -(140 + 276) ;break;end end end elseif (v47==2047) then return ((v46==(1566 -(206 + 113 + (1668 -(382 + 39))))) and (v48 * ((1 + 0)/((5938 -4407) -(1413 + 118))))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/((6 -4)^((1598 -(1222 + 366)) + 42)))) ;end local function v25(v49)local v50=1141 -(112 + 1029) ;local v51;local v52;while true do if (v50==(1793 -(585 + 1205))) then return v6(v52);end if (v50==2) then v52={};for v80=3 -2 , #v51 do v52[v80]=v2(v1(v3(v51,v80,v80)));end v50=2 + 1 ;end if (v50==((1661 -(488 + 1172)) + 0)) then v51=v3(v16,v18,(v18 + v49) -(1 -0) );v18=v18 + v49 ;v50=1 + 1 ;end if (v50==0) then v51=nil;if  not v49 then v49=v23();if (v49==((0 -0) -0)) then return "";end end v50=1342 -(1194 + 147) ;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v53=1385 -(1366 + 19) ;local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v53==2) then v58=nil;v59=nil;v53=941 -(864 + 74) ;end if ((3 + 1)==v53) then while true do if (v54==0) then local v97=1153 -(738 + 415) ;while true do if (v97==1) then v54=2 -1 ;break;end if (v97~=0) then else v55=0 -0 ;v56=nil;v97=1;end end end if (v54~=(2 + 0)) then else local v98=0 + 0 ;while true do if (v98==1) then v54=3;break;end if (v98==(0 -0)) then v59=nil;v60=nil;v98=1;end end end if (v54~=3) then else v61=nil;while true do local v107=0;local v108;while true do if (v107==(0 + 0)) then v108=1394 -(1341 + 53) ;while true do if (v108~=(0 + 0)) then else local v113=0;while true do if (v113==1) then v108=1;break;end if (v113~=0) then else if ((0 -0)==v55) then local v118=0 + 0 ;local v119;while true do if (v118==(1397 -(1035 + 362))) then v119=0;while true do if (v119~=2) then else v55=566 -(24 + 541) ;break;end if (v119~=0) then else local v126=0 + 0 ;while true do if (v126~=(0 -0)) then else v56={};v57={};v126=1;end if (v126==1) then v119=1 + 0 ;break;end end end if (v119~=(1 -0)) then else local v127=0 + 0 ;while true do if (v127~=(1968 -(1058 + 909))) then else v119=2 -0 ;break;end if (v127~=(340 -(321 + 19))) then else v58={};v59={v56,v57,nil,v58};v127=1;end end end end break;end end end if (v55==(5 -3)) then local v120=0 + 0 ;while true do local v121=0;local v122;while true do if (v121~=(0 -0)) then else v122=0 -0 ;while true do if (v122~=(0 + 0)) then else if (v120==(2 -1)) then local v212=0 -0 ;local v213;while true do if (v212==(840 -(37 + 803))) then v213=1914 -(692 + 1222) ;while true do if (v213~=(0 -0)) then else local v257=0 -0 ;while true do if (0==v257) then for v283=1,v23() do v58[v283]=v23();end return v59;end end end end break;end end end if (v120==(0 -0)) then local v214=0;while true do if (v214~=0) then else for v228=1,v23() do local v229=0 + 0 ;local v230;local v231;local v232;while true do if (v229==1) then v232=nil;while true do if (v230~=0) then else local v285=0;while true do if (v285~=(1749 -(332 + 1416))) then else v230=1 + 0 ;break;end if (v285==0) then v231=0;v232=nil;v285=1;end end end if (v230~=(407 -(98 + 308))) then else while true do if (v231==0) then v232=v21();if (v20(v232,1 + 0 ,1)~=0) then else local v296=0;local v297;local v298;local v299;local v300;local v301;local v302;while true do if (0==v296) then v297=614 -(395 + 219) ;v298=nil;v296=1;end if (v296~=1) then else v299=nil;v300=nil;v296=2;end if (v296==(1 + 1)) then v301=nil;v302=nil;v296=3;end if (v296==(199 -(157 + 39))) then while true do if (v297~=(0 -0)) then else local v332=0;while true do if (v332==1) then v297=1498 -(85 + 1412) ;break;end if (v332~=(0 -0)) then else v298=0 + 0 ;v299=nil;v332=1420 -(306 + 1113) ;end end end if (v297==(71 -(59 + 10))) then v302=nil;while true do if (v298~=0) then else local v343=0;while true do if (v343==(0 + 0)) then v299=0 -0 ;v300=nil;v343=1;end if (v343==(331 -(287 + 43))) then v298=1;break;end end end if (v298==1) then local v344=0;while true do if (1==v344) then v298=2;break;end if (0==v344) then v301=nil;v302=nil;v344=1349 -(1338 + 10) ;end end end if (v298==2) then while true do if (3==v299) then if (v20(v301,6 -3 ,2 + 1 )==1) then v302[644 -(67 + 573) ]=v61[v302[17 -13 ]];end v56[v228]=v302;break;end if (v299==(1409 -(1196 + 212))) then local v348=0;while true do if (v348==1) then v299=1871 -(435 + 1434) ;break;end if (v348==(0 -0)) then local v357=0;local v358;while true do if (v357~=(0 -0)) then else v358=0;while true do if (v358==(0 + 0)) then local v367=1009 -(746 + 263) ;while true do if (v367~=(0 + 0)) then else v302={v22(),v22(),nil,nil};if (v300==(1480 -(538 + 942))) then local v370=0;local v371;while true do if (v370==(0 + 0)) then v371=0 -0 ;while true do if (v371==(678 -(382 + 296))) then v302[3]=v22();v302[1140 -(1131 + 5) ]=v22();break;end end break;end end elseif (v300==1) then v302[3]=v23();elseif (v300==2) then v302[13 -10 ]=v23() -(2^16) ;elseif (v300==(8 -5)) then local v376=0 + 0 ;local v377;local v378;while true do if (v376==(0 + 0)) then v377=0 + 0 ;v378=nil;v376=539 -(259 + 279) ;end if (v376==(1 + 0)) then while true do if (v377~=0) then else v378=0;while true do if (v378==(1955 -(327 + 1628))) then v302[7 -4 ]=v23() -((1 + 1)^(1 + 15)) ;v302[4]=v22();break;end end break;end end break;end end end v367=580 -(248 + 331) ;end if (v367==(481 -(132 + 348))) then v358=1;break;end end end if (v358==(973 -(88 + 884))) then v348=3 -2 ;break;end end break;end end end end end if (v299~=(1121 -(753 + 366))) then else local v349=0;while true do if (v349~=(0 + 0)) then else local v359=1432 -(1184 + 248) ;while true do if (v359==(1296 -(623 + 672))) then v349=712 -(423 + 288) ;break;end if (0==v359) then if (v20(v301,1 -0 ,1)==(4 -3)) then v302[2]=v61[v302[2]];end if (v20(v301,2,2)~=(1153 -(624 + 528))) then else v302[3]=v61[v302[13 -10 ]];end v359=3 -2 ;end end end if ((2 -1)==v349) then v299=1 + 2 ;break;end end end if (v299==0) then local v350=0 -0 ;local v351;local v352;while true do if (v350~=(1906 -(1884 + 22))) then else v351=0;v352=nil;v350=302 -(270 + 31) ;end if (v350~=1) then else while true do if ((0 + 0)==v351) then v352=478 -(10 + 468) ;while true do if (v352==(1 + 0)) then v299=834 -(625 + 208) ;break;end if (v352==(1036 -(569 + 467))) then local v368=865 -(667 + 198) ;local v369;while true do if (v368==0) then v369=758 -(362 + 396) ;while true do if (v369==(0 -0)) then v300=v20(v232,9 -7 ,3);v301=v20(v232,4,4 + 2 );v369=1;end if (v369==(2 -1)) then v352=1;break;end end break;end end end end break;end end break;end end end end break;end end break;end if (v297~=(1 + 0)) then else local v333=0 -0 ;while true do if (v333==0) then v300=nil;v301=nil;v333=1;end if (v333==1) then v297=7 -5 ;break;end end end end break;end end end break;end end break;end end break;end if (0==v229) then v230=0 + 0 ;v231=nil;v229=2 -1 ;end end end for v233=341 -(123 + 217) ,v23() do v57[v233-(1 -0) ]=v28();end v214=1289 -(199 + 1089) ;end if (v214~=(274 -(54 + 219))) then else v120=1;break;end end end break;end end break;end end end end v113=1;end end end if (v108~=1) then else if (v55~=1) then else local v114=0;local v115;while true do if (v114==(617 -(463 + 154))) then v115=0 -0 ;while true do if (v115==1) then local v123=0 -0 ;while true do if (v123==(0 + 0)) then for v132=1,v60 do local v133=0 + 0 ;local v134;local v135;local v136;while true do if ((0 + 0)~=v133) then else v134=0 -0 ;v135=nil;v133=307 -(87 + 219) ;end if (v133~=1) then else v136=nil;while true do if (v134==(1 + 0)) then if (v135==1) then v136=v21()~=0 ;elseif (v135==2) then v136=v24();elseif (v135~=3) then else v136=v25();end v61[v132]=v136;break;end if (v134~=0) then else v135=v21();v136=nil;v134=1;end end break;end end end v59[1 + 2 ]=v21();v123=1;end if (v123~=(1710 -(446 + 1263))) then else v115=2;break;end end end if ((656 -(634 + 20))~=v115) then else v55=1839 -(249 + 1588) ;break;end if (v115==(1796 -(736 + 1060))) then local v124=0 -0 ;while true do if (v124==1) then v115=1;break;end if (v124==0) then local v129=0;while true do if (v129~=(1 + 0)) then else v124=1;break;end if ((0 -0)==v129) then v60=v23();v61={};v129=1 -0 ;end end end end end end break;end end end break;end end break;end end end break;end if (v54==(1 + 0)) then local v99=0 -0 ;while true do if ((1 + 0)~=v99) then else v54=1465 -(160 + 1303) ;break;end if (v99==0) then v57=nil;v58=nil;v99=1 -0 ;end end end end break;end if (v53~=1) then else v56=nil;v57=nil;v53=2;end if (v53~=3) then else v60=nil;v61=nil;v53=4;end if (v53==(0 + 0)) then v54=0;v55=nil;v53=2 -1 ;end end end local function v29(v62,v63,v64)local v65=0;local v66;local v67;local v68;while true do if (v65==1) then v68=v62[3];return function(...)local v82=1;local v83= -1;local v84={...};local v85=v12("#",...) -1 ;local function v86()local v87=v66;local v88=v67;local v89=v68;local v90=v27;local v91={};local v92={};local v93={};for v100=1888 -(707 + 1181) ,v85 do if ((498<=(1844 -(725 + 187))) and (v100>=v89)) then v91[v100-v89 ]=v84[v100 + 1 ];else v93[v100]=v84[v100 + (866 -(466 + 399)) ];end end local v94=(v85-v89) + 1 ;local v95;local v96;while true do local v101=0 + 0 ;local v102;local v103;while true do if ((v101==(1 + 0)) or ((8656 -5541)==(387 + 1117))) then while true do if (((0 -(599 -(389 + 210)))==v102) or ((2621 -(616 + 1135))>3374)) then v103=0 -0 ;while true do if (((0 -0)==v103) or ((4250 -(276 + 356))==3081)) then local v116=0;local v117;while true do if (((1979 -(207 + 1172 + 355))<=(2964 + 1402)) and (v116==(40 -(29 + 11)))) then v117=1046 -(340 + 14 + 692) ;while true do if ((v117==(1954 -(1583 + 371))) or ((373 + (9306 -5952))==(2779 -(12 + 8 + 5)))) then local v125=0;while true do if (((19 -(7 + 11))==v125) or ((41 + 33)>=(11755 -(39469 -30346)))) then v117=1;break;end if (((410 + 732)<(1287 + 1390)) and ((1662 -(863 + 799))==v125)) then v95=v87[v82];v96=v95[1 + 0 + 0 ];v125=1;end end end if ((((2 + 1) -2)==v117) or ((15000 -10784)>(9953 -5601))) then v103=1 + 0 ;break;end end break;end end end if (((1738 + 1164)<=(3562 -(119 + 50))) and (v103==(2 -1))) then if (((4295 -764)==(1924 + 1607)) and (v96<=(42 -(500 -(139 + 334))))) then if (((2400 -(21 + 31))>(524 + 1590)) and (v96<=(16 -9))) then if ((v96<=(1 + 2)) or ((11505 -7198)<((5666 -3731) + 1136))) then if (((6322 -(1225 + 521))>(1458 -356)) and (v96<=(1 -0))) then if ((v96>(0 -0)) or (4354==((6482 + 6120) -8050))) then local v137=1793 -(1007 + 786) ;local v138;local v139;while true do if (((3479 + 206)>=(8 + 163)) and (v137==(1 + 0))) then while true do if (((5020 -(256 + 392))>=2613) and (v138==(0 -0))) then v139=v95[5 -3 ];v93[v139]=v93[v139](v13(v93,v139 + 1 ,v95[2 + 1 ]));break;end end break;end if ((0==v137) or (134==(1558 -(262 + 33)))) then v138=0 -(0 -0) ;v139=nil;v137=1 + 0 ;end end else local v140=0 + 0 ;local v141;local v142;local v143;local v144;local v145;while true do if (((3541 -(542 + 1129 + 137))>=(5528 -(268 + 3565))) and (v140==(1 + 1))) then v145=nil;while true do if (((3289 -(455 + 37))<(4824 -(1347 + 232))) and (v141==(1824 -(1395 + 428)))) then local v238=0;while true do if (((2339 + 1399)>(552 + 2811 + 270)) and (v238==(0 -0))) then v144=nil;v145=nil;v238=570 -(413 + 156) ;end if ((v238==(1 + 0)) or ((22 + 233)>(1344 -(887 + (360 -(63 + 216)))))) then v141=130 -(127 + 1) ;break;end end end if (((1776 -984)<(886 + 3727)) and ((0 -0)==v141)) then local v239=0 -0 ;while true do if ((v239==(671 -(662 + 9))) or (4915<=(3391 -(387 + 472)))) then v142=0 + 0 ;v143=nil;v239=133 -(14 + 118) ;end if ((4354>(840 -(301 + 417 + 120))) and (v239==(1 + 0))) then v141=3 -2 ;break;end end end if (((6614 -(333 + 1402))<=((13178 -5135) -3105)) and (v141==(5 -3))) then while true do if (((2494 -(314 + 47))>(401 + (1590 -(250 + 906)))) and (v142==(4 -2))) then for v272=1 + 0 ,v95[2 + 2 ] do local v273=1567 -(985 + 582) ;local v274;local v275;local v276;while true do if ((v273==(1 + 0)) or ((1529 + 1587)<(1390 + 1101))) then v276=nil;while true do if ((((2 -1) + 0)==v274) or (3933>(4607 -(380 + 276)))) then while true do if ((v275==(1 + 0)) or ((2536 -(7 + 124))>=(4259 -(133 + 303)))) then if ((v276[1]==((29 -19) + 10)) or ((702 -(160 + 48))>(775 + 644))) then v145[v272-1 ]={v93,v276[1745 -(1039 + 703) ]};else v145[v272-((1 -0) + 0) ]={v63,v276[(872 -(175 + 693)) -1 ]};end v92[ #v92 + (254 -(34 + 219)) ]=v145;break;end if ((v275==(566 -((922 -(57 + 384)) + 85))) or ((5077 -(1016 + 263))<=(2475 + 852))) then local v314=(1455 + 309) -(1197 + 567) ;local v315;while true do if (((3171 -825)==(10510 -8164)) and (v314==(0 + 0))) then v315=0;while true do if ((2641<=(4825 -(178 + 1152))) and ((1567 -(1485 + 81))==v315)) then v275=1 -0 ;break;end if ((v315==(0 -0)) or ((5622 -3054)>3235)) then v82=v82 + 1 ;v276=v87[v82];v315=1;end end break;end end end end break;end if ((v274==(0 + 0)) or ((1285 -(702 + 42))>=(7151 -5320))) then local v292=0 + 0 ;while true do if (((8703 -6588)<(4195 -(396 + 159))) and (v292==((0 -0) -0))) then v275=0 + 0 ;v276=nil;v292=1 + 0 ;end if (((2470 + 1682)==4152) and (v292==(1636 -(1465 + 170)))) then v274=3 -2 ;break;end end end end break;end if ((v273==(0 -0)) or ((798 -(576 + 180))>4911)) then v274=0;v275=nil;v273=3 -2 ;end end end v93[v95[4 -2 ]]=v29(v143,v144,v64);break;end if ((v142==(1 + 0)) or ((4231 -(25 + 49))>(18222 -13939))) then local v261=969 -(878 + 91) ;local v262;while true do if ((((5637 + 183) -(477 + 1293))>=2563) and (v261==(0 -(1046 -(339 + 707))))) then v262=0 + 0 ;while true do if ((v262==(3 -2)) or ((2997 -2268)>=((9142 -5795) -(366 + 1150)))) then v142=1 + 1 ;break;end if (((9490 -5271)>1828) and (v262==(0 -0))) then local v288=0;while true do if (((873 -(719 + 154))==v288) or ((431 + 3991)<(377 + 615))) then v145={};v144=v10({},{__index=function(v316,v317)local v318=417 -(230 + 187) ;local v319;local v320;while true do if (((1284 -411)<=2502) and (v318==(552 -(249 + 145 + 157)))) then while true do if ((v319==0) or (2179<1504)) then v320=v145[v317];return v320[1][v320[2]];end end break;end if ((v318==(0 + 0)) or (3437>(9479 -4847))) then v319=(0 + 0) -(0 -0) ;v320=nil;v318=2 -1 ;end end end,__newindex=function(v321,v322,v323)local v324=0 + 0 ;local v325;local v326;local v327;while true do if (((740 + 427)<=1278) and (1==v324)) then v327=nil;while true do if ((((119 + 4834) -3916)<=((29889 -23693) -(529 + 717 + 111))) and (v325==(3 -2))) then while true do if ((v326==0) or ((1081 -(539 + 470))>(5356 -(454 + 143)))) then v327=v145[v322];v327[1 -0 ][v327[(7 -4) -1 ]]=v323;break;end end break;end if ((3818<=(6142 -(235 + (2653 -(877 + 565))))) and (v325==(1127 -(789 + 338)))) then local v339=0 + (276 -(167 + 109)) ;while true do if (((1929 -(1775 + 154))==v339) or ((2052 -(1182 + 763))>=2174)) then v326=1976 -(1663 + 313) ;v327=nil;v339=1188 -(370 + 817) ;end if ((3149>=(3045 -2070)) and (v339==(1 + 0))) then v325=2 -1 ;break;end end end end break;end if (((2727 -(987 + 850 + 107))==(1959 -1176)) and (v324==0)) then v325=1353 -(337 + (2039 -1023)) ;v326=nil;v324=1 + 0 ;end end end});v288=960 -(461 + 154 + 344) ;end if ((v288==(1 + 0)) or (((12303 -3644) -3753)<=(4139 + 366))) then v262=590 -(409 + 180) ;break;end end end end break;end end end if (((14270 -9759)>=(2066 -359)) and (v142==0)) then local v263=0 -0 ;local v264;while true do if (((975 + 3865)>(1685 -981)) and (v263==(0 -0))) then v264=0 -0 ;while true do if ((v264==(1 -0)) or (691>(3234 -(207 + 157)))) then v142=1175 -(875 + 299) ;break;end if (((8556 -6105)>=(92 + 1863)) and (v264==(0 + 0))) then local v289=(127 -(92 + 35)) + 0 ;while true do if ((v289==(1 + 0)) or ((3384 + 568)>(1287 + 2684))) then v264=4 -3 ;break;end if (((3940 + 365)>(2184 + 860)) and (((1811 -(457 + 1354)) -0)==v289)) then v143=v88[v95[1082 -(5 + 149 + 925) ]];v144=nil;v289=1;end end end end break;end end end end break;end end break;end if ((2917>=(1096 + 249)) and (v140==(1 + 0))) then v143=nil;v144=nil;v140=2 + 0 ;end if ((2283<=(640 + 3971)) and (v140==(0 + 0))) then v141=866 -(446 + 420) ;v142=nil;v140=37 -(13 + 12 + 11) ;end end end elseif ((v96==2) or (((1009 -432) + 0)==(3984 -(1615 + 369)))) then v93[v95[7 -5 ]]=v64[v95[(35 -27) -5 ]];else local v148=1370 -((870 -(516 + 233)) + 1249) ;local v149;local v150;while true do if ((v148==(173 -(43 + 129))) or ((721 + 936)>(4744 -(60 + 1639)))) then while true do if (((9733 -7699)>(4021 -2052)) and (v149==(0 + 0))) then v150=v95[2 + 0 ];v93[v150](v13(v93,v150 + 1 ,v95[3]));break;end end break;end if (((0 + 0)==v148) or ((2272 -1406)>=2111)) then v149=0 + 0 ;v150=nil;v148=1148 -(960 + 187) ;end end end elseif (((4383 -(198 + (1279 -(868 + 351))))>((1757 -(932 + 665)) + 598)) and (v96<=(1916 -(640 + 1271)))) then if (((224 + 1747)<(2669 + 608)) and (v96>(4 + 0))) then v63[v95[10 -7 ]]=v93[v95[3 -1 ]];else v93[v95[2 -0 ]]=v95[1588 -(596 + 141 + 848) ]~=(1321 -(1297 + 24)) ;end elseif (((6687 -(424 + 1465))>(14313 -(7644 + 2427))) and (v96>6)) then if (((1349 + 2980)>=(1012 + 2579)) and v93[v95[1 + 1 ]]) then v82=v82 + 1 + 0 ;else v82=v95[3 + 0 ];end else local v154=0;local v155;local v156;local v157;while true do if (((162 + 24)<(2050 -(212 + 92))) and (v154==(4 -3))) then v157=nil;while true do if ((v155==(1 + 0)) or (193<(2 -1))) then for v251=v156 + 1 + 0 ,v95[(5 -1) -1 ] do v7(v157,v93[v251]);end break;end if (((2667 -(560 + 424))<(6526 -((963 -700) + 1347))) and (v155==0)) then v156=v95[1 + 1 ];v157=v93[v156];v155=2 -(1 -0) ;end end break;end if ((v154==((648 + 96) -(667 + 77))) or ((1036 + 3139)>=(4944 -(363 + 3 + 10)))) then v155=(0 -0) -(892 -(189 + 703)) ;v156=nil;v154=1;end end end elseif (((1905 -1468)==(969 -532)) and (v96<=(25 -(464 -(253 + 197))))) then if ((v96<=(17 -8)) or (4806<=(4763 -2920))) then if ((v96==(1147 -(114 + 1025))) or ((19024 -14092)<3691)) then if (((1198 + 213 + 2832)<((187 + 6649) -(1511 + (2220 -(581 + 1214))))) and (v95[5 -3 ]==v93[v95[1 + 3 ]])) then v82=v82 + 1 ;else v82=v95[654 -(100 + 551) ];end else local v158=0 + 0 ;local v159;local v160;local v161;while true do if ((v158==(0 -0)) or ((6308 -(220 + 321 + 889))<(5583 -(693 + 480)))) then local v221=506 -(312 + 194) ;while true do if ((v221==(1346 -(793 + 552))) or ((886 + (4048 -(20 + 24)))<=(15048 -(11885 -(578 + 496))))) then v158=1;break;end if (((644 -(183 + 461))==v221) or ((5951 -(521 + (2841 -(388 + 1163))))<51)) then v159=1663 -(404 + 1259) ;v160=nil;v221=1 -0 ;end end end if (((3023 -1952)<=4454) and (v158==(2 -1))) then v161=nil;while true do if ((2357>=(2067 + 173)) and (0==v159)) then local v243=411 -((900 -(177 + 493)) + 181) ;while true do if ((v243==((353 -(188 + 165)) -0)) or (3290==(4433 -(95 + 21)))) then local v265=(0 -0) -0 ;while true do if (((3443 -(749 + 16 + 149))<=(2549 + (3217 -(144 + 1296)))) and ((1 + 0)==v265)) then v243=4 -(2 + 1) ;break;end if (((1201 + 2021)<=(9691 -(1552 + 4277))) and ((0 -0)==v265)) then v160=v95[738 -((1241 -(276 + 509)) + 280) ];v161={};v265=1 + 0 ;end end end if ((v243==(2 -1)) or ((2940 -(94 + 96))>3241)) then v159=1;break;end end end if (((3025 -1524)==(1921 -420)) and (v159==(2 -1))) then for v252=1 + 0 , #v92 do local v253=0 -0 ;local v254;local v255;local v256;while true do if ((v253==(1 + 0)) or ((5276 -3315)==(2263 + 54))) then v256=nil;while true do if (((1 + 0)==v254) or (2578>=(1582 + 362 + 1581))) then while true do if ((4223>=(3483 -(2827 -(96 + 482)))) and (v255==(0 + 0))) then v256=v92[v252];for v303=0 -0 , #v256 do local v304=0;local v305;local v306;local v307;local v308;while true do if ((332<=(2054 + 1676)) and (v304==2)) then while true do if ((693<=2758) and (v305==(1 + 0))) then v308=v306[(799 + 957) -(1298 + 456) ];if (((v307==v93) and (v308>=v160)) or (1755>=(3975 -((1842 -(106 + 386)) + 132)))) then local v340=(0 + 0) -0 ;local v341;local v342;while true do if (((622 + 1970)<(5127 -(700 + 68 + 309))) and (0==v340)) then v341=0;v342=nil;v340=3 -2 ;end if ((v340==(1090 -(28 + 1061))) or ((1271 + 3282)<=775)) then while true do if ((v341==(781 -(142 + 639))) or ((522 + 929)>(9928 -(25068 -18822)))) then v342=0 + 0 ;while true do if ((((0 -0) + 0)==v342) or ((4423 + 352)>=(8877 -4052))) then v161[v308]=v307[v308];v306[1]=v161;break;end end break;end end break;end end end break;end if (((0 + 0)==v305) or (4884==(2484 -((1699 -1077) + 940)))) then local v335=(1835 -(1647 + 188)) -(0 -0) ;local v336;while true do if ((v335==(0 + 0)) or ((1832 -(830 + 410))>(4524 -((1430 -(999 + 370)) + 319)))) then v336=0 -0 ;while true do if (((2060 -(169 + 409))==((552 + 1688) -(539 + (721 -(381 + 121))))) and (v336==(0 + (0 -0)))) then v306=v256[v303];v307=v306[1534 -(1430 + 103) ];v336=1;end if (((694 -(141 + 443))==(388 -278)) and (v336==(1 + 0))) then v305=295 -(18 + 276) ;break;end end break;end end end end break;end if (((2138 -(153 + 35))==(1909 + 41)) and (v304==1)) then local v328=0;while true do if (((0 -0)==v328) or ((7736 -4201)<=485)) then v307=nil;v308=nil;v328=2 -1 ;end if ((v328==(1 + 0)) or ((5126 -(3898 -(28 + 1232)))<(376 + 381))) then v304=1 + 0 + 1 ;break;end end end if (((4537 -(1144 + 456))>(1783 -(339 + 459))) and (v304==(0 -0))) then local v329=0 -0 ;while true do if ((1==v329) or (219==(269 + 2731))) then v304=1 + 0 ;break;end if (((4549 -(591 + 943))>=3000) and (v329==(0 + 0))) then v305=0 + 0 + 0 ;v306=nil;v329=215 -(83 + 131) ;end end end end end break;end end break;end if ((((0 -0) -0)==v254) or (2156<(949 -(364 + 53)))) then local v287=34 -(6 + 28) ;while true do if ((v287==1) or ((720 + 911)==((2569 + 118) -(127 + 174)))) then v254=1823 -(223 + 975 + 624) ;break;end if (((1022 -(118 + 144 + 601))<=4499) and (v287==(0 -0))) then v255=0 -0 ;v256=nil;v287=894 -(723 + 71 + 99) ;end end end end break;end if ((v253==(0 -0)) or ((685 + 2338)==(2595 + 2187))) then v254=0;v255=nil;v253=1 + 0 ;end end end break;end end break;end end end elseif (((3940 -(193 + 197))>=2100) and (v96==(25 -15))) then for v207=v95[3 -1 ],v95[3] do v93[v207]=nil;end else do return;end end elseif ((v96<=(32 -19)) or ((3822 -(173 + 101))<((5503 -(1326 + 200)) -1693))) then if (((1284 + 48)<=(7095 -4301)) and (v96==(6 + 6))) then if (((10138 -5256)==(5016 -(79 + 55))) and (v93[v95[2 -0 ]]==v93[v95[17 -13 ]])) then v82=v82 + 1 ;else v82=v95[(2222 -(475 + 176)) -(603 + (1788 -823)) ];end else v93[v95[7 -5 ]]={};end elseif (((4545 -(164 + 1633))<(5175 -(634 + 620))) and (v96==(25 -11))) then v93[v95[2]][v93[v95[3]]]=v95[4];else v93[v95[1250 -(92 + (5275 -4119)) ]]= not v93[v95[3 + 0 ]];end elseif (((11007 -8365)>(2406 -((1750 -1157) + 1013))) and (v96<=(15 + 8))) then if ((v96<=(14 + 5)) or ((5167 -(277 + 1003))<(1815 -(750 + 205)))) then if ((1592<=(958 + 3357)) and (v96<=(256 -(146 + 93)))) then if ((v96==16) or ((4678 -(561 + 1199))<=(3623 -1326))) then v93[v95[2 + (660 -(257 + 403)) ]]=v93[v95[2 + 1 ]][v95[4]];else v93[v95[(3 -1) -0 ]][v95[(3 + 5) -5 ]]=v93[v95[4]];end elseif ((v96==(1055 -(822 + 215))) or (((6054 -2309) -(611 + 611))<(2550 -1530))) then v93[v95[3 -1 ]][v95[3 -0 ]]=v95[4];else v93[v95[(178 -106) -(65 + 5) ]]=v95[3 + 0 ];end elseif ((2424>=(190 + 542)) and (v96<=21)) then if ((1802<(3590 -1510)) and (v96>(31 -11))) then local v174=0;local v175;local v176;while true do if (((11941 -7413)>(5190 -(363 + 1447))) and (v174==(1 -0))) then v93[v175 + 1 ]=v176;v93[v175]=v176[v95[7 -3 ]];break;end if ((v174==0) or (2285<=(5906 -4174))) then v175=v95[1966 -(222 + 1742) ];v176=v93[v95[3 + 0 ]];v174=2 -1 ;end end else v93[v95[1 + 1 ]]=v93[v95[1594 -(442 + 1149) ]];end elseif ((2578==(1607 + 971)) and (v96>(3 + 2 + 17 + 0))) then local v179=0 + 0 ;local v180;local v181;local v182;local v183;local v184;while true do if (((6255 -(249 + 1310))>=(4323 -2619)) and (v179==(0 + 0))) then v180=0 -0 ;v181=nil;v179=1 + 0 ;end if (((4479 -(70 + 320))>2620) and (v179==1)) then v182=nil;v183=nil;v179=1 + 1 ;end if ((v179==(1 + 1)) or (2681<(3737 -(2718 -(1290 + 192))))) then v184=nil;while true do if ((v180==(0 + 0 + 0)) or ((13527 -8539)<=((4918 + 4074) -5479))) then local v244=0 + 0 ;while true do if ((4159>(3772 -(97 + 260))) and (v244==0)) then v181=0 + 0 ;v182=nil;v244=1;end if ((v244==(1213 -(22 + 1190))) or ((865 -(538 -(65 + 106)))==(12774 -8340))) then v180=1 + 0 ;break;end end end if (((1 + (0 -0))==v180) or ((6506 -3179)<(1447 + 50))) then local v245=(0 + 0) -0 ;while true do if (((1751 -1236)<=(5051 -3235)) and (0==v245)) then v183=nil;v184=nil;v245=1;end if (((1443 -363)==(241 + 839)) and (v245==(313 -(12 + 300)))) then v180=3 -1 ;break;end end end if ((v180==(2 + 0)) or (3343<=(483 -205))) then while true do if ((v181==(3 -2)) or ((1087 + 1688)<=((14127 -10063) -1854))) then v184=v95[1857 -(1506 + 348) ];for v277=1 + (0 -0) ,v184 do v183[v277]=v93[v182 + v277 ];end break;end if ((v181==(0 + 0)) or ((3709 -(160 + 1061))>(3799 + 423))) then local v267=0;local v268;while true do if ((v267==(328 -((423 -151) + 56))) or ((747 + (4261 -(311 + 395)))==(1889 -(152 + 319)))) then v268=25 -((745 -(21 + 712)) + 13) ;while true do if (((2251 -603)>1031) and (v268==0)) then local v290=0 + 0 ;while true do if ((v290==(0 -0)) or (3167<1032)) then v182=v95[1001 -(622 + 377) ];v183=v93[v182];v290=2 -1 ;end if (((1144 + (692 -153))==(4162 -2479)) and (v290==(1 + 0))) then v268=1 + 0 ;break;end end end if (((2928 -(128 + 210 + 1058))>=(1456 -376)) and (v268==1)) then v181=1 + 0 ;break;end end break;end end end end break;end end break;end end else local v185=0;local v186;local v187;while true do if ((((3084 -(206 + 1557)) + 775)==(1919 + 177)) and ((0 + 0)==v185)) then v186=0;v187=nil;v185=1924 -(1823 + 100) ;end if ((v185==(1 + 0)) or ((7641 -(5956 -(417 + 133)))>(5897 -2291))) then while true do if ((v186==(0 -0)) or ((2119 -1547)>2414)) then v187=v95[2];v93[v187]=v93[v187](v13(v93,v187 + (1374 -(735 + 638)) ,v83));break;end end break;end end end elseif (((5564 -4040)>(1086 -(260 + 610))) and (v96<=(27 + (232 -(138 + 94))))) then if (((838 -653)<1762) and (v96<=(74 -49))) then if ((v96>(24 + 0)) or ((1971 + 525)<(893 + 944))) then v93[v95[213 -(10 + 201) ]]=v63[v95[3]];else local v190=1358 -(1299 + 59) ;local v191;local v192;local v193;local v194;local v195;local v196;while true do if ((v190==(1 + (0 -0))) or ((3508 + 94)<(3123 -966))) then v193=nil;v194=nil;v190=2;end if (((9308 -5742)>=1231) and ((6 -3)==v190)) then while true do if (((5141 -(336 + 830))<(6200 -(919 + 332))) and (v191==(0 -(0 + 0)))) then local v248=0;while true do if ((v248==1) or ((549 + 238)==(4626 -(799 + (2056 -1465))))) then v191=1 -0 ;break;end if ((v248==0) or ((914 + (6041 -2081))<=89)) then v192=0 + 0 + 0 ;v193=nil;v248=1087 -(648 + 438) ;end end end if (((895 + 79)<(773 + 2522)) and (v191==(1183 -(47 + 1135)))) then v194=nil;v195=nil;v191=1 + 0 + 1 ;end if ((v191==(2 -0)) or ((5588 -(258 + 810))>=(6470 -(1166 + 310)))) then v196=nil;while true do if (((541 -300)<=4937) and (v192==2)) then for v280=v193,v83 do local v281=0;local v282;while true do if (((6906 -3611)<=(9431 -(7475 -2759))) and (0==v281)) then v282=0 -0 ;while true do if (((176 + 319)>(334 -(71 + 4 + 13))) and (v282==(96 -(81 + 15)))) then v196=v196 + (2 -1) ;v93[v280]=v194[v196];break;end end break;end end end break;end if (((3258 -(1390 + 445))<((11730 + 6024) -14126)) and (v192==(0 -0))) then local v269=428 -((39 -13) + 402) ;local v270;while true do if ((v269==(1634 -(133 + 83 + 1418))) or ((1238 -552)>(3270 -(1400 + 168)))) then v270=0;while true do if (((1947 -(430 + 45))<4894) and (v270==0)) then local v291=0;while true do if ((3762>=(4245 -(457 + 156))) and (v291==(0 -0))) then v193=v95[2 + 0 ];v194,v195=v90(v93[v193](v13(v93,v193 + (64 -(36 + 21 + 6)) ,v95[382 -(28 + 31 + 320) ])));v291=2 -1 ;end if (((1202 -(361 + 633))<=(12983 -8402)) and (v291==(1 + 0))) then v270=447 -(302 + 144) ;break;end end end if ((v270==1) or (23>(3311 -((2438 -1797) + 530)))) then v192=303 -(49 + 253) ;break;end end break;end end end if (((452 + 1316)<=3663) and (v192==(1 + 0))) then local v271=0 + 0 ;while true do if (((16355 -12759)>=213) and (v271==(1 + 0))) then v192=1183 -(38 + 705 + 438) ;break;end if ((v271==(1264 -(815 + 449))) or ((2262 -(112 + 142))<=(2507 -1931))) then v83=(v195 + v193) -(4 -3) ;v196=0 + 0 + 0 ;v271=1;end end end end break;end end break;end if ((v190==0) or ((2315 -(292 + 327))>((1828 -(138 + 1132)) + 1474))) then v191=0 + 0 ;v192=nil;v190=(1382 -(466 + 915)) + 0 ;end if ((4011>(2 + 9)) and (v190==(1092 -(426 + 664)))) then v195=nil;v196=nil;v190=4 -1 ;end end end elseif ((v96>((4250 -2366) -(1538 + 320))) or ((3765 -(1301 + 545))>(11734 -7061))) then v93[v95[2]]();else v82=v95[1 + 2 + 0 ];end elseif ((((2600 -(310 + 163)) + 2538)>=(2044 -(1294 + 121))) and (v96<=(965 -(100 + 836)))) then if ((1246==1246) and (v96>(4 + 24))) then if ((v93[v95[1 + 0 + 1 ]]==v95[1 + 3 ]) or ((2963 + 233)<=(182 + 2452))) then v82=v82 + (2 -(2 -1)) ;else v82=v95[(238 -(107 + 128)) -0 ];end else local v198=v95[(1539 -(1441 + 92)) -4 ];local v199=v95[18 -14 ];local v200=v198 + (157 -(125 + 30)) ;local v201={v93[v198](v93[v198 + (422 -(192 + 152 + 77)) ],v93[v200])};for v209=2 -(1 + 0) ,v199 do v93[v200 + v209 ]=v201[v209];end local v202=v201[1682 -(1200 + 481) ];if ((481<=(1950 -(809 + 369))) and v202) then local v219=0 + 0 ;local v220;while true do if ((v219==(0 -0)) or ((1761 + 268)==3090)) then v220=0 -0 ;while true do if ((v220==0) or (3751<(18 + 80))) then v93[v200]=v202;v82=v95[1 + 2 ];break;end end break;end end else v82=v82 + 1 ;end end elseif ((v96>(900 -((1025 -(297 + 606)) + 748))) or ((959 + 1310)>=2640)) then local v203=104 -(14 + 90) ;local v204;local v205;while true do if ((v203==1) or ((2559 -(816 + 522))>=(6456 -4813))) then while true do if ((1096<(4211 -(133 + 1091))) and (v204==(0 -0))) then v205=v95[1442 -(898 + 542) ];v93[v205]=v93[v205](v93[v205 + 1 ]);break;end end break;end if ((v203==(0 -0)) or ((895 -(35 + 126))>(760 + 1778))) then local v227=0;while true do if ((v227==(1111 -(58 + 1052))) or (4106<(2411 -1329))) then v203=1;break;end if ((v227==(321 -(290 + 31))) or ((5454 -(580 + 1286))<1807)) then v204=0;v205=nil;v227=2 -1 ;end end end end else v93[v95[2 + 0 + 0 ]]=v29(v88[v95[3]],nil,v64);end v82=v82 + (2 -(1 -0)) ;break;end end break;end end break;end if (((16604 -(10412 + 1680))==(5334 -(652 + 170))) and (v101==(0 -0))) then v102=0;v103=nil;v101=631 -(444 + 186) ;end end end end A,B=v27(v11(v86));if  not A[1] then local v104=v62[4][v82] or "?" ;error("Script error at ["   .. v104   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end if (v65==0) then v66=v62[1];v67=v62[2];v65=1;end end end return v29(v28(),{},v17)(...);end vv9(),...);end
