--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v72=v2(v0(v30,16));if v19 then local v88=v5(v72,v19);v19=nil;return v88;else return v72;end end end);local function v20(v31,v32,v33)if v33 then local v73=(v31/(2^(v32-(664 -(560 + 103)))))%(2^(((v33-((388 + 10) -(245 + 152))) -(v32-1)) + 1 + 0)) ;return v73-(v73%(2 -1)) ;else local v74=(1 + 1)^(v32-(1 + 0)) ;return (((v31%(v74 + v74))>=v74) and ((400 + 672) -(433 + 638))) or (261 -((233 -106) + 134)) ;end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35=(0 -0) + 0 ;local v36;local v37;while true do if (0==v35) then v36,v37=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (112 -(106 + 4)) ;v35=1420 -(430 + 989) ;end if ((1 + 0)==v35) then return (v37 * (127 + 129)) + v36 ;end end end local function v23()local v38,v39,v40,v41=v1(v16,v18,v18 + ((7 -3) -1) );v18=v18 + 1 + 3 ;return (v41 * (40497115 -23719899)) + (v40 * ((67025 -(833 + 172)) -(326 + 158))) + (v39 * 256) + v38 ;end local function v24()local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,1 -(1778 -(71 + 1707)) ,52 -32 ) * ((2 + 0)^(8 + 24))) + v42 ;local v46=v20(v43,9 + 12 ,29 + 2 );local v47=((v20(v43,42 -10 )==(1440 -((1946 -(279 + 932)) + 704))) and  -(1 -0)) or (1 + 0) ;if (v46==(1906 -(1385 + (1284 -(539 + 224))))) then if (v45==(0 + (870 -(249 + 621)))) then return v47 * (0 -0) ;else v46=1 + (225 -(188 + 37)) ;v44=1174 -(142 + 315 + 717) ;end elseif (v46==2047) then return ((v45==0) and (v47 * (((2 -1) + 0)/(0 + 0)))) or (v47 * NaN) ;end return v8(v47,v46-(2148 -(993 + 132)) ) * (v44 + (v45/((502 -(397 + 103))^((1158 + 861) -(570 + 1397))))) ;end local function v25(v48)local v49;if  not v48 then v48=v23();if (v48==(1469 -(587 + 882))) then return "";end end v49=v3(v16,v18,(v18 + v48) -1 );v18=v18 + v48 ;local v50={};for v65=1, #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0 + 0 ;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v51~=(6 -4)) then else v56=nil;v57=nil;v51=3;end if (v51~=1) then else v54=nil;v55=nil;v51=7 -5 ;end if (v51==(1745 -(1388 + 357))) then v52=0 + 0 ;v53=nil;v51=3 -2 ;end if (3==v51) then v58=nil;while true do local v89=0 -0 ;while true do if (0~=v89) then else if (v52==(1834 -(524 + 1308))) then local v96=0 -0 ;while true do if (v96~=(1 -0)) then else for v100=1,v23() do v55[v100]=v23();end return v56;end if (v96~=0) then else for v102=1,v23() do local v103=0 -0 ;local v104;local v105;local v106;while true do if (v103==(1 + 0)) then v106=nil;while true do if (v104~=(0 + 0)) then else local v188=0 -0 ;local v189;while true do if (0==v188) then v189=0 -0 ;while true do if (v189==(454 -(338 + 115))) then v104=1915 -(1719 + 195) ;break;end if (v189~=(0 -0)) then else local v253=0 -0 ;while true do if (v253==(2 -1)) then v189=2 -1 ;break;end if ((0 -0)==v253) then v105=1510 -(376 + 1134) ;v106=nil;v253=1;end end end end break;end end end if (v104==1) then while true do if (v105==(1667 -(278 + 1389))) then v106=v21();if (v20(v106,1 + 0 ,1)==(75 -(41 + 34))) then local v241=0 + 0 ;local v242;local v243;local v244;local v245;local v246;while true do if (v241==(0 -0)) then v242=0;v243=nil;v241=2 -1 ;end if (v241~=(2 -0)) then else v246=nil;while true do if (v242==(1 + 0)) then v245=nil;v246=nil;v242=5 -3 ;end if (v242~=(1034 -(843 + 189))) then else while true do if (v243==3) then if (v20(v245,3,1 + 2 )~=(1171 -(116 + 1054))) then else v246[506 -(249 + 253) ]=v58[v246[8 -4 ]];end v53[v102]=v246;break;end if (v243==1) then local v293=0;local v294;while true do if ((0 -0)~=v293) then else v294=0 -0 ;while true do if (v294==1) then v243=7 -5 ;break;end if (v294==(0 -0)) then local v311=0 + 0 ;while true do if (1==v311) then v294=1 + 0 ;break;end if (v311==(0 -0)) then v246={v22(),v22(),nil,nil};if (v244==0) then local v312=0 -0 ;local v313;while true do if (v312==(0 + 0)) then v313=0 -0 ;while true do if (v313~=(0 -0)) then else v246[14 -11 ]=v22();v246[3 + 1 ]=v22();break;end end break;end end elseif (v244==(1 + 0)) then v246[1 + 2 ]=v23();elseif (v244==(3 -1)) then v246[3]=v23() -((331 -(79 + 250))^(7 + 9)) ;elseif (v244==(551 -(242 + 306))) then local v318=0;local v319;local v320;while true do if (v318~=1) then else while true do if ((695 -(518 + 177))==v319) then v320=0 -0 ;while true do if (v320==0) then v246[9 -6 ]=v23() -(2^(8 + 8)) ;v246[3 + 1 ]=v22();break;end end break;end end break;end if ((0 -0)==v318) then v319=0 + 0 ;v320=nil;v318=1;end end end v311=1618 -(1050 + 567) ;end end end end break;end end end if (v243~=(1 + 1)) then else local v295=1756 -(1111 + 645) ;while true do if (v295==(0 + 0)) then if (v20(v245,4 -3 ,1 -0 )~=(2 -1)) then else v246[2]=v58[v246[2]];end if (v20(v245,1 + 1 ,1 + 1 )~=(3 -2)) then else v246[1 + 2 ]=v58[v246[3 + 0 ]];end v295=1 + 0 ;end if (v295==(1 + 0)) then v243=1513 -(624 + 886) ;break;end end end if (0==v243) then local v296=796 -(483 + 313) ;while true do if (v296==(0 -0)) then v244=v20(v106,5 -3 ,4 -1 );v245=v20(v106,4,2 + 4 );v296=323 -(167 + 155) ;end if (v296~=(4 -3)) then else v243=1 + 0 ;break;end end end end break;end if (v242~=0) then else local v279=0;while true do if (v279~=(0 + 0)) then else v243=0;v244=nil;v279=1 + 0 ;end if ((1082 -(413 + 668))==v279) then v242=1 -0 ;break;end end end end break;end if (v241==1) then v244=nil;v245=nil;v241=2 + 0 ;end end end break;end end break;end end break;end if (v103~=(687 -(246 + 441))) then else v104=576 -(525 + 51) ;v105=nil;v103=1;end end end for v107=2 -1 ,v23() do v54[v107-1 ]=v28();end v96=1;end end end if (v52==(1 + 0)) then local v97=218 -(105 + 113) ;local v98;while true do if (v97==0) then v98=0;while true do if (v98==(428 -(362 + 65))) then local v109=0 -0 ;while true do if (v109==(417 -(378 + 38))) then v98=2 + 0 ;break;end if (v109==(0 -0)) then for v190=1 + 0 ,v57 do local v191=534 -(237 + 297) ;local v192;local v193;local v194;while true do if (v191~=(0 + 0)) then else v192=0;v193=nil;v191=1;end if (v191==(62 -(19 + 42))) then v194=nil;while true do if (v192~=(1 + 0)) then else if (v193==(1 + 0)) then v194=v21()~=(350 -(127 + 223)) ;elseif (v193==(1088 -(486 + 600))) then v194=v24();elseif (v193~=(1097 -(584 + 510))) then else v194=v25();end v58[v190]=v194;break;end if (v192==(0 -0)) then local v255=0 -0 ;while true do if (v255~=0) then else v193=v21();v194=nil;v255=1535 -(523 + 1011) ;end if (v255~=(1 + 0)) then else v192=1 + 0 ;break;end end end end break;end end end v56[683 -(580 + 100) ]=v21();v109=461 -(121 + 339) ;end end end if (v98~=(1851 -(1565 + 286))) then else local v110=0 -0 ;while true do if (v110==1) then v98=1;break;end if (v110==(0 + 0)) then v57=v23();v58={};v110=1;end end end if ((3 -1)~=v98) then else v52=82 -(31 + 49) ;break;end end break;end end end v89=1 + 0 ;end if ((1 + 0)==v89) then if (v52==(1493 -(231 + 1262))) then local v99=0;while true do if (v99==(0 -0)) then v53={};v54={};v99=1;end if (v99==(2 -0)) then v52=1 + 0 ;break;end if (v99==1) then v55={};v56={v53,v54,nil,v55};v99=1293 -(832 + 459) ;end end end break;end end end break;end end end local function v29(v59,v60,v61)local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1 ;local function v71()local v75=v62;local v76=v63;local v77=v64;local v78=v27;local v79={};local v80={};local v81={};for v85=0,v70 do if (((5495 -4268)<3430) and (v85>=v77)) then v79[v85-v77 ]=v69[v85 + 1 ];else v81[v85]=v69[v85 + 1 ];end end local v82=(v70-v77) + 1 ;local v83;local v84;while true do local v86=186 -(145 + 41) ;while true do if ((4684==(1054 + 3630)) and (0==v86)) then v83=v75[v67];v84=v83[1 + 0 ];v86=1880 -(1868 + 11) ;end if ((v86==(500 -(455 + 43 + 1))) or (((6047 -(338 + 1164)) -(14 + 298))==(7858 -4080))) then if ((v84<=(689 -(468 + 206))) or (289==(68 + 2848))) then if ((((6267 -(1242 + 467)) -(816 + 836))>(232 + 207)) and (v84<=7)) then if ((v84<=(1819 -((2367 -(696 + 1283)) + 1428))) or (2617<=(797 + 874))) then if (((2228 + (4374 -2457))>((919 -645) + 665)) and (v84<=1)) then if ((v84>(1568 -(1485 + 83))) or ((3506 -(1833 + 22))>(1475 + 1731))) then local v111=755 -(579 + 176) ;local v112;local v113;local v114;local v115;while true do if ((v111==1) or (3571<((2646 + 1744) -2351))) then local v195=(1491 -(130 + 303)) -(204 + 854) ;while true do if ((v195==0) or ((4435 -3016)>2572)) then v114=nil;v115=nil;v195=1331 -(895 + 435) ;end if ((v195==1) or ((1842 + (2187 -1595))>4994)) then v111=1 + 1 ;break;end end end if ((592<=(5017 -(265 + 1281))) and (v111==(0 + 0))) then local v196=0 -0 ;while true do if (((3476 -(185 + 749 + 255))<(1185 + 2706 + 718)) and (0==v196)) then v112=0 -0 ;v113=nil;v196=1272 -(692 + 579) ;end if ((v196==1) or (903>=(2757 -1806))) then v111=2 -1 ;break;end end end if ((v111==(6 -(2 + 2))) or ((9998 -5222)==(2504 -1810))) then while true do if (((1478 + 1302)>(123 + 256)) and (v112==(462 -(268 + 19 + 173)))) then for v232=1 + 0 + 0 ,v83[4] do local v233=0 -0 ;local v234;local v235;while true do if ((v233==(0 + 0)) or ((2030 -1376)>2010)) then v234=0;v235=nil;v233=1 + 0 + 0 ;end if (((3655 -(299 + 271 + 31))>=(1445 + 1568)) and (v233==1)) then while true do if ((v234==1) or ((3452 -(1037 + 388))>2337)) then if (((968 + 725)>=((951 -592) -130)) and (v235[1 + 0 ]==(20 + 10))) then v115[v232-(1 + 0) ]={v81,v235[215 -(48 + 36 + 128) ]};else v115[v232-(439 -(147 + 291)) ]={v60,v235[7 -4 ]};end v80[ #v80 + (1 -0) ]=v115;break;end if ((v234==(0 + (0 -0))) or ((3423 -(427 + 1002))<(269 + 601))) then local v266=(2641 -(49 + 1829)) -(584 + 179) ;local v267;while true do if (((0 + 0)==v266) or (3569>=(823 + 570 + 2231))) then v267=889 -(439 + (636 -(173 + 13))) ;while true do if ((726>=(2162 -(1003 + 294 + 230))) and ((0 + 0)==v267)) then local v301=0 -0 ;while true do if ((2673>(2837 -(415 + (930 -407)))) and (v301==(2 -1))) then v267=3 -2 ;break;end if ((v301==(463 -(387 + 76))) or ((2084 -1561)>=(6095 -2444))) then v67=v67 + 1 ;v235=v75[v67];v301=3 -(4 -2) ;end end end if ((((5362 -1693) -(511 + 96))>(10015 -7181)) and (v267==(1 + 0))) then v234=1085 -(135 + 949) ;break;end end break;end end end end break;end end end v81[v83[(20 -15) -3 ]]=v29(v113,v114,v61);break;end if ((1822>=(3316 -(1320 + 362))) and (v112==(0 -0))) then local v213=0 -0 ;local v214;while true do if (((422 -(83 + 45))<(5792 -3031)) and (v213==0)) then v214=0;while true do if ((v214==(1432 -(825 + 606))) or (1035>=4098)) then v112=45 -(3 + 7 + 34) ;break;end if (((803 + 1537)<2379) and (v214==(985 -(21 + (1676 -(424 + 288)))))) then v113=v76[v83[3 + 0 ]];v114=nil;v214=1 + 0 ;end end break;end end end if (((4827 -(38 + 1546))>=(149 + (2197 -(920 + 880)))) and (v112==(2 -1))) then local v215=1498 -(740 + 758) ;local v216;while true do if (((3576 -(276 + 1048))<=(9846 -6681)) and (v215==(0 + 0))) then v216=0;while true do if (((1729 + 698)>=(132 + 111)) and (v216==(1 + 0))) then v112=5 -3 ;break;end if (((28 + 1768)==1796) and (v216==(0 + 0))) then v115={};v114=v10({},{__index=function(v268,v269)local v270=0 + 0 + 0 ;local v271;while true do if ((0==v270) or ((2108 -((2157 -1247) + 286))>(7493 -3919))) then local v288=0;while true do if ((v288==(0 -0)) or ((6274 -2576)<(6351 -3458))) then v271=v115[v269];return v271[1][v271[2 -0 ]];end end end end end,__newindex=function(v272,v273,v274)local v275=0 + 0 + 0 ;local v276;while true do if (((792 + 1662)>=(3193 -(582 + 1196))) and (v275==(1292 -(282 + 1010)))) then v276=v115[v273];v276[(473 -(78 + 24)) -(117 + 253) ][v276[(31 -(17 + 9)) -3 ]]=v274;break;end end end});v216=1;end end break;end end end end break;end end else local v116=720 -(565 + 155) ;local v117;local v118;local v119;local v120;local v121;while true do if (((3332 -(635 + 995))==((1943 -(850 + 800)) + 1409)) and ((3 -2)==v116)) then v119=nil;v120=nil;v116=1 + (3 -2) ;end if ((v116==(0 + (0 -0))) or ((4220 -2112)>(1783 + 1842))) then v117=847 -(405 + 442) ;v118=nil;v116=3 -2 ;end if ((v116==(1 + 1)) or (3411>(3512 + 551 + 581))) then v121=nil;while true do if ((v117==(4 -3)) or ((4 + 356)>=(410 + 636))) then v120=nil;v121=nil;v117=2;end if (((3298 -(613 + 580))<=(8950 -4113)) and (v117==(641 -(212 + 429)))) then local v217=78 -(59 + 19) ;while true do if ((v217==(1 + 0)) or ((6036 -2284)>(2890 + 1963))) then v117=1601 -(659 + 941) ;break;end if ((v217==(0 + 0)) or ((407 + 2435)==((3266 -(56 + 28)) + 1309))) then v118=0 + 0 ;v119=nil;v217=1;end end end if (((11344 -6390)==((17426 -10275) -2197)) and (v117==(5 -3))) then while true do if ((0==v118) or ((3896 -1935)>=(1010 + 1603))) then local v256=0 -0 ;local v257;while true do if ((v256==0) or (4602<(5943 -2058))) then v257=0 + 0 ;while true do if ((v257==((4980 -3152) -(410 + 1418))) or ((2824 + 347)<227)) then v119=v83[3 -1 ];v120=v81[v119];v257=1 + 0 ;end if ((((142 + 1870) -1189)<=(4840 -(618 + 173))) and ((1043 -(480 + 562))==v257)) then v118=1516 -(118 + 1397) ;break;end end break;end end end if ((v118==(1892 -(1690 + 201))) or ((2713 -((790 -(351 + 407)) + 23))<=(3309 -2476))) then v121=v83[865 -(63 + 799) ];for v259=2 -1 ,v121 do v120[v259]=v81[v119 + v259 ];end break;end end break;end end break;end end end elseif ((v84==(1043 -(660 + 381))) or ((2954 -(452 + 373))>=(8452 -(3971 + 588)))) then local v122=0;local v123;local v124;while true do if ((1==v122) or ((2595 -((1906 -(465 + 36)) + 148))>4825)) then while true do if ((v123==(0 + 0 + 0)) or ((1503 + 294)<=(1914 -(800 + 146)))) then v124=v83[5 -3 ];v81[v124]=v81[v124](v13(v81,v124 + 1 + 0 ,v68));break;end end break;end if ((v122==(0 -0)) or ((11355 -7688)<=(181 + 1683))) then v123=0 -0 ;v124=nil;v122=296 -(290 + 5) ;end end elseif ((v81[v83[6 -4 ]]==v83[10 -6 ]) or ((8615 -6052)>4819)) then v67=v67 + 1 ;else v67=v83[3 + (0 -0) ];end elseif ((v84<=(1316 -(651 + 660))) or ((9327 -6887)<=(2156 -(320 + 200)))) then if ((v84==(611 -(228 + 379))) or (243>=(9400 -4931))) then v81[v83[(990 -(121 + 864)) -3 ]]=v60[v83[11 -8 ]];else v81[v83[8 -6 ]]=v83[3];end elseif ((v84>(841 -(2 + 36 + 797))) or ((947 + 700)<(1943 -(80 + 1847)))) then local v129=0 + 0 ;local v130;local v131;while true do if ((v129==(0 -0)) or ((17 + 40)==(2256 -(145 + 637)))) then local v197=0 -(0 -0) ;while true do if (((0 + 0)==v197) or ((942 -(131 + 257 + 258))>((5696 -(25 + 5)) -1392))) then v130=0 -0 ;v131=nil;v197=468 -(349 + 118) ;end if ((v197==(2 -1)) or ((52 + 19)>(6339 -3068))) then v129=2 -1 ;break;end end end if ((((6658 -(220 + 1152)) -(592 + 108))<4730) and (v129==(1215 -(302 + 912)))) then while true do if ((v130==0) or ((225 + 3702)==(3580 -(1423 + 11)))) then v131=v83[8 -6 ];v81[v131]=v81[v131](v81[v131 + (1 -0) ]);break;end end break;end end else local v132=1557 -(826 + 731) ;local v133;local v134;local v135;while true do if ((155<=2999) and ((0 -0)==v132)) then local v198=0 -0 ;while true do if ((v198==(3 -2)) or (((2955 -(123 + 61)) + 1171)>(5421 -1185))) then v132=3 -2 ;break;end if (((10033 -5651)>(2447 -((277 -(185 + 38)) + 34))) and ((1660 -(1355 + 305))==v198)) then v133=0 -0 ;v134=nil;v198=1;end end end if ((1983>=(561 + 179)) and (v132==(2 -(109 -(17 + 91))))) then v135=nil;while true do if ((v133==(1957 -(1801 + 155))) or ((629 -(1094 -(177 + 624)))>(8598 -4974))) then for v236=v134 + (838 -(115 + 722)) ,v83[9 -6 ] do v7(v135,v81[v236]);end break;end if (((0 -0)==v133) or ((2474 + 1194)<(2206 + 1))) then local v222=0 + 0 ;local v223;while true do if ((v222==(0 -0)) or (2494<=2419)) then v223=0 -0 ;while true do if ((v223==(1 + 0)) or ((654 + 356)>((4688 -2090) -(235 + 1221)))) then v133=1;break;end if ((997>(74 + 137)) and (v223==(0 -0))) then local v263=0;while true do if ((1==v263) or ((2533 -904)==(5018 -1706))) then v223=(1129 -(1021 + 107)) + 0 ;break;end if (((3118 + 431)<=(4691 + 44)) and ((0 -0)==v263)) then v134=v83[1 + 1 ];v135=v81[v134];v263=1192 -(831 + 360) ;end end end end break;end end end end break;end end end elseif (((4223 -(480 + 1276))>=(1684 -(468 + 665))) and (v84<=(10 + (1 -0)))) then if (((645 + 2446)>(616 + 654)) and (v84<=(873 -(215 + 649)))) then if ((v84>(30 -22)) or (1825>=(4528 -1073))) then do return;end else v81[v83[1 + 1 ]]=v83[10 -7 ]~=(827 -(630 + 197)) ;end elseif (((328 + (932 -(64 + 168)))==(2036 -1008)) and (v84==(7 + 3))) then v81[v83[154 -(133 + 19) ]]= not v81[v83[3 + 0 ]];elseif (v81[v83[2]] or (2115>((2076 -(53 + 535)) + (1423 -778)))) then v67=v67 + 1 + 0 ;else v67=v83[1985 -(1159 + 402 + 421) ];end elseif ((v84<=13) or ((4419 -3236)>=(5698 -4087))) then if ((v84==(714 -(114 + 588))) or ((3301 -(670 + 497))>(17477 -12643))) then v67=v83[6 -3 ];else local v139=1886 -(839 + 1047) ;local v140;while true do if ((4001<=((5999 -(214 + 49)) -(184 + 1167))) and (v139==(0 -0))) then v140=v83[2];v81[v140](v13(v81,v140 + 1 + 0 ,v83[(6 -3) -0 ]));break;end end end elseif ((v84>((8 -4) + 10)) or ((4355 -(712 + (4124 -2859)))>4997)) then local v141=0 -0 ;local v142;local v143;while true do if ((((6310 -(432 + 36)) -(836 + 29))>=((1347 + 2384) -1999)) and (v141==(1 + 0 + 0))) then while true do if (((5093 -(742 + 1218))>=2285) and (v142==(0 + 0))) then v143=v83[2 + (1384 -(1185 + 199)) ];v81[v143]=v81[v143](v13(v81,v143 + 1 + 0 + 0 ,v83[737 -(632 + 102) ]));break;end end break;end if (((0 -0)==v141) or ((621 + 3373)>=(11379 -(5325 + 1077)))) then v142=292 -(179 + 7 + 106) ;v143=nil;v141=1847 -(508 + 1338) ;end end elseif ((v81[v83[1176 -(765 + 409) ]]==v81[v83[4]]) or ((6558 -4763)>=((17566 -10751) -3710))) then v67=v67 + (836 -(542 + 293)) ;else v67=v83[109 -(51 + 55) ];end elseif (((6108 -(1237 + 21))>=3381) and (v84<=(11 + 12))) then if ((v84<=(38 -19)) or (2669<(2319 -(856 + 836)))) then if ((v84<=(38 -21)) or (((5 -3) + 32)>=(588 -302))) then if ((v84==(1823 -(1027 + 780))) or ((3681 -(782 + 332))<=(2142 -1598))) then local v144=v83[3 -1 ];local v145=v83[4];local v146=v144 + (815 -(175 + 426 + 212)) ;local v147={v81[v144](v81[v144 + (1190 -(694 + (2017 -(768 + 754)))) ],v81[v146])};for v177=4 -(7 -4) ,v145 do v81[v146 + v177 ]=v147[v177];end local v148=v147[1];if ((1985>=((1579 -(661 + 506)) + 615)) and v148) then local v186=(0 -0) + 0 ;while true do if ((v186==(286 -(12 + 274))) or ((16097 -11478)==(3878 -((3428 -2530) + 388)))) then v81[v146]=v148;v67=v83[3 -0 ];break;end end else v67=v67 + (1 -0) ;end else v81[v83[2 -0 ]]=v81[v83[7 -4 ]][v83[4]];end elseif ((1461<=(6250 -(1222 + 177))) and (v84==(977 -(231 + 728)))) then v81[v83[2]][v81[v83[663 -(53 + 213 + 394) ]]]=v83[1598 -(730 + 864) ];else v81[v83[2 + 0 ]][v83[5 -2 ]]=v83[948 -(734 + 210) ];end elseif ((v84<=(8 + 13 + 0)) or ((2769 + 1985)<=(3177 -(44 + 681)))) then if ((v84==(48 -28)) or ((2878 -(160 + 897))<(231 + 80))) then v81[v83[(2 + 1) -1 ]]=v29(v76[v83[512 -(487 + 22) ]],nil,v61);else local v156=0;local v157;local v158;local v159;local v160;local v161;while true do if (((34 + 2188)<(712 + 4013)) and (v156==0)) then local v200=0 + 0 ;while true do if ((v200==(1 + 0)) or ((137 + (7018 -4550))>=2859)) then v156=365 -(281 + 83) ;break;end if ((v200==(0 -0)) or ((585 + 546)>(4404 + 438))) then v157=0 + 0 ;v158=nil;v200=1;end end end if ((v156==(1970 -(1302 + 666))) or (((2861 -(141 + 589)) + 1075)>=(9220 -4403))) then v161=nil;while true do if ((v157==1) or (71>=(2057 -(203 + (870 -690))))) then local v226=0 -(0 -0) ;while true do if ((v226==(321 -(245 + 75))) or ((11917 -7790)==(1000 -(411 + 92)))) then v157=1 + (1143 -(1114 + 28)) ;break;end if (((3738 -(488 + 52))>1444) and (v226==(0 + 0))) then v68=(v160 + v158) -((1851 -(1818 + 32)) -(0 -0)) ;v161=0 + 0 ;v226=1109 -(330 + 778) ;end end end if ((((3789 -(768 + 159)) -(3695 -2721))>=((4046 -2523) -598)) and (v157==(0 + 0))) then local v227=0;local v228;while true do if ((v227==(1466 -(22 + 1444))) or ((4098 -(1360 + 17))==(6717 -(7279 -3630)))) then v228=0 + 0 ;while true do if (((1283 + 723)<=4107) and (v228==(899 -(827 + 71)))) then v157=1;break;end if ((v228==(0 + 0)) or ((2038 + 981)<(1202 -944))) then v158=v83[2 + 0 ];v159,v160=v78(v81[v158](v13(v81,v158 + (1611 -(1429 + (1741 -(1391 + 169)))) ,v83[2 + 1 ])));v228=1 + 0 ;end end break;end end end if ((v157==2) or ((2184 + 442 + 768)>(10717 -6408))) then for v237=v158,v68 do local v238=0 + 0 ;local v239;while true do if (((4795 -(900 + 362))>=(3729 -(663 + 183))) and (v238==(0 + 0))) then v239=(681 -(36 + 350)) -(169 + 126) ;while true do if ((1335>(2122 -1045)) and (0==v239)) then v161=v161 + (681 -(310 + 370)) ;v81[v237]=v159[v161];break;end end break;end end end break;end end break;end if ((v156==1) or ((1122 + 2059)==(878 + 2501))) then local v201=0;while true do if ((v201==(0 -0)) or (((265 -(181 + 41)) + 232)>603)) then v159=nil;v160=nil;v201=1964 -(1779 + 184) ;end if (((2194 + 1772)<=(1719 + 2788)) and (v201==(1 + 0))) then v156=350 -(241 + 107) ;break;end end end end end elseif ((v84==22) or ((918 -213)>1279)) then local v162=0 + 0 ;local v163;local v164;while true do if ((v162==(0 + 0)) or ((4690 -(417 + 469))<=(3520 + 149))) then local v202=0 + 0 ;while true do if (((7561 -5940)<=1667) and (v202==0)) then v163=v83[2 -0 ];v164={};v202=1 + 0 ;end if ((v202==(190 -(27 + 162))) or (((1555 -(814 + 65)) + 92)>=(3279 -(1146 + 146)))) then v162=1 + 0 ;break;end end end if ((v162==1) or ((5196 -4049)>(2495 + 1278))) then for v207=1, #v80 do local v208=0;local v209;while true do if (((1248 -(1073 + 3))<=(448 + 4194)) and (v208==(0 + 0))) then v209=v80[v207];for v247=0, #v209 do local v248=0 + 0 ;local v249;local v250;local v251;local v252;while true do if (((1 + 0)==v248) or ((14454 -10591)<=(3564 -(260 + 203)))) then v251=nil;v252=nil;v248=150 -(38 + 110) ;end if (((4607 -(812 + 127))==(2860 + 808)) and (v248==2)) then while true do if (((10581 -6618)>=(9994 -7097)) and (v249==((0 + 0) -0))) then local v280=1710 -(1565 + 145) ;while true do if (((2791 -860)==(834 + 1097)) and (v280==0)) then v250=v209[v247];v251=v250[1388 -(375 + 1012) ];v280=(7 -3) -3 ;end if ((2180>(987 + 772)) and (v280==1)) then v249=(2 + 0) -1 ;break;end end end if ((v249==1) or ((2020 -(740 + 1058))>=((7457 -1842) -(1105 + 627)))) then v252=v250[2 + 0 ];if (((v251==v81) and (v252>=v163)) or ((718 -422)==(543 + 4291))) then local v291=1759 -(1729 + 7 + 23) ;while true do if ((v291==0) or ((1869 -(1225 + 416))>2926)) then v164[v252]=v251[v252];v250[3 -2 ]=v164;break;end end end break;end end break;end if ((v248==0) or ((6726 -3062)<(1530 + 393))) then v249=0 -0 ;v250=nil;v248=1;end end end break;end end end break;end end else for v180=v83[1 + 1 ],v83[3 + 0 ] do v81[v180]=nil;end end elseif ((v84<=27) or ((1820 + 1136)<=(1386 -(85 + 64)))) then if ((v84<=(903 -(62 + 816))) or ((7964 -(6578 -(340 + 1121)))==(1867 -(67 + 306)))) then if ((v84>24) or ((132 + (1874 -582))>=(8080 -6148))) then v81[v83[5 -3 ]]={};elseif ((v83[1 + 1 ]==v81[v83[2 + 2 ]]) or ((16423 -12082)<=2990)) then v67=v67 + 1 + 0 ;else v67=v83[1392 -(358 + 1031) ];end elseif (((8126 -4440)>=(1765 -628)) and (v84==((26 + 8) -8))) then v81[v83[1117 -(203 + 912) ]][v83[3]]=v81[v83[1 + 1 + 2 + 0 ]];else local v168=113 -(36 + 77) ;local v169;local v170;while true do if ((4534>=(1189 + 76)) and (v168==(1 + 0))) then v81[v169 + (382 -(293 + 88)) ]=v170;v81[v169]=v170[v83[3 + 1 ]];break;end if ((v168==(0 -0)) or ((1181 + 469)>=(454 + 2871))) then local v206=0 + 0 ;while true do if (((21 + 55)==(50 + 26)) and (1==v206)) then v168=176 -(11 + 164) ;break;end if (((1952 -(158 + 632 + 366))<=(1775 + 304)) and ((1151 -(540 + 611))==v206)) then v169=v83[270 -(151 + 117) ];v170=v81[v83[3 -0 ]];v206=1 + 0 ;end end end end end elseif ((v84<=(1476 -(1280 + 167))) or ((5857 -(235 + 794))<=((11979 -6144) -(1155 + 774)))) then if (((10663 -7491)==(6725 -3553)) and (v84==(2 + 26))) then v60[v83[3]]=v81[v83[1980 -(1426 + 552) ]];else v81[v83[(1 + 1) -0 ]]();end elseif (((1213 + 297)>=(1867 -1347)) and (v84>(106 -76))) then v81[v83[2]]=v61[v83[1357 -(1030 + 324) ]];else v81[v83[6 -4 ]]=v81[v83[1041 -(593 + 445) ]];end v67=v67 + (354 -(79 + 274)) ;break;end end end end A,B=v27(v11(v71));if  not A[1] then local v87=v59[4][v67] or "?" ;error("Script error at ["   .. v87   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
