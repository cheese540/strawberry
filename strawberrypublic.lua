--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v30=nil;function v30(v31,v32,v33)local v34=v31[1];local v35=v31[2];local v36=v31[3];return function(...)local v68=1;local v69= -1;local v70={...};local v71=v12("#",...) -1 ;local function v72()local v74=v34;local v75=v35;local v76=v36;local v77=v28;local v78={};local v79={};local v80={};for v90=1934 -(1582 + 352) ,v71 do if (((4621 -(177 + 904))<(4369 + 13 + 7)) and (v90>=v76)) then v78[v90-v76 ]=v70[v90 + 1 + 0 ];else v80[v90]=v70[v90 + 1 ];end end local v81=(v71-v76) + ((1502 -(495 + 1006)) -0) ;local v82;local v83;while true do local v91=0 -0 ;local v92;local v93;while true do if ((v91==1) or (1801>(5501 -1050))) then while true do if ((v92==(1039 -(29 + 1010))) or ((594 + 2917)<702)) then v93=0;while true do if (((13939 -10606)==(7615 -4282)) and (v93==(1 + 0))) then if ((v83<=(3 + 2 + (1651 -(232 + 1409)))) or ((5532 -(787 + 208))<=16)) then if ((v83<=(1548 -(1124 + (2073 -(1533 + 123))))) or ((13934 -10373)>=(6180 -(679 + 517)))) then if ((v83<=(10 -(1341 -(1089 + 245)))) or ((1169 -(214 + 338))==(1434 + 1492))) then if ((v83<=(1 + 0)) or ((1515 + 582)==((9103 -(498 + 146)) -4845))) then if (((3202 -(211 + 211 + 701))<(3056 + 4 + 101)) and (v83>0)) then if ((2533>(3460 -(341 + 862 + 715))) and v80[v82[(1831 -(454 + 1370)) -5 ]]) then v68=v68 + (379 -(298 + 80)) ;else v68=v82[1 + 2 ];end else v80[v82[2]]=v82[3]~=(0 + 0) ;end elseif (((6448 -3661)>=(198 + 581)) and (v83==(1404 -(1277 + (564 -(197 + 242)))))) then local v139=0 + 0 ;local v140;local v141;while true do if (((5324 -(708 + 234))==4382) and (v139==((0 + 0) -0))) then v140=907 -(788 + 119) ;v141=nil;v139=3 -2 ;end if ((v139==((3 -2) -0)) or ((1907 + 1304)<(2690 -(189 + 25)))) then while true do if ((((3322 -(67 + 1)) -2231)<=4993) and (v140==(0 -0))) then v141=v82[1410 -(899 + 509) ];v80[v141]=v80[v141](v13(v80,v141 + 1 + 0 ,v82[2 + 1 ]));break;end end break;end end else v80[v82[(943 -431) -(162 + 348) ]]=v82[1428 -(1252 + 173) ];end elseif ((1882==(3874 -(1753 + 239))) and (v83<=(2 + 3))) then if ((v83==(3 + 1)) or (((1645 -(493 + 441)) + 2342)==(3096 + 409))) then v80[v82[(2 -1) + 1 ]][v82[4 -1 ]]=v80[v82[9 -5 ]];else local v146=0 -0 ;local v147;while true do if ((v146==(958 -((1057 -(180 + 6)) + 87))) or ((1900 -(933 + 755))==(2828 -(39 + 82)))) then v147=v82[1102 -(197 + 903) ];v80[v147]=v80[v147](v13(v80,v147 + (1 -0) ,v69));break;end end end elseif ((((5635 -(1420 + 209)) -(598 + 16))<=4019) and (v83>(1881 -(1447 + 428)))) then v68=v82[354 -(115 + 236) ];elseif (((3988 -(26 + 161))>(357 + 714)) and (v80[v82[601 -(21 + 578) ]]==v82[2 + 2 ])) then v68=v68 + (1863 -((703 -(30 + 624)) + (3733 -(1614 + 306)))) ;else v68=v82[819 -(428 + 388) ];end elseif ((v83<=11) or ((1204 -618)>=(4021 -1012))) then if (((1935 -(801 + 678))==(2219 -1763)) and (v83<=9)) then if (((15285 -11070)>=((1771 -(98 + 963)) -(282 + 44))) and (v83>(22 -14))) then for v207=v82[1462 -(1417 + 43) ],v82[8 -5 ] do v80[v207]=nil;end else local v149=v82[2];local v150=v82[4 + 0 ];local v151=v149 + 2 ;local v152={v80[v149](v80[v149 + (1788 -(774 + 1013)) ],v80[v151])};for v209=360 -((1424 -(879 + 455)) + (1264 -995)) ,v150 do v80[v151 + v209 ]=v152[v209];end local v153=v152[106 -(20 + 85) ];if (v153 or ((396 + 365)>(4888 -(1091 + 260)))) then local v214=0 + 0 ;local v215;local v216;while true do if (((169 + 538)==(1371 -664)) and ((0 -0)==v214)) then v215=1871 -(169 + 1702) ;v216=nil;v214=1 + 0 + 0 ;end if ((3600>=((5794 -4363) -575)) and (v214==1)) then while true do if (((2062 -(193 + 999))<(19428 -15518)) and (v215==(0 -0))) then v216=0 + 0 ;while true do if ((v216==0) or ((18699 -14173)<(120 + 426))) then v80[v151]=v153;v68=v82[4 -(1937 -(1279 + 657)) ];break;end end break;end end break;end end else v68=v68 + 1 + 0 ;end end elseif (((2854 -1875)==(1701 -722)) and (v83>(38 -28))) then local v154=0 + (0 -0) ;local v155;while true do if ((v154==0) or (((3041 -(315 + 469)) + 1064)<=(1959 + 1216))) then v155=v82[2];v80[v155](v13(v80,v155 + 1 + 0 ,v82[7 -4 ]));break;end end else v32[v82[3 + 0 ]]=v80[v82[1 + 0 + 1 ]];end elseif (((4772 -3567)<=2482) and (v83<=((1538 -(8 + 4)) -(721 + 792)))) then if (((1307 + 452)<(1863 + 652)) and (v83==(36 -24))) then v80[v82[2]][v82[1305 -(1196 + 106) ]]=v82[4];else local v160=945 -(781 + 164) ;local v161;while true do if (((0 + 0 + 0)==v160) or ((3884 -(70 + 179))<(2188 -675))) then v161=v82[2];v80[v161]=v80[v161](v80[v161 + 1 ]);break;end end end elseif ((687<(4760 -(601 + 986))) and (v83>(24 -10))) then local v162=1262 -(1151 + 111) ;local v163;local v164;local v165;local v166;local v167;while true do if (((5445 -(1175 + 442))>=3366) and (v162==(1506 -(421 + 1085)))) then v163=0 + 0 ;v164=nil;v162=1 -0 ;end if ((v162==(2 -0)) or ((5461 -(136 + 79 + 1272))==((1488 -(94 + 31)) -((2311 -(1719 + 186)) + 504)))) then v167=nil;while true do if ((v163==(0 -0)) or (2013<=229)) then local v231=0;while true do if ((v231==(1 + 0)) or ((434 + 678)>=(3382 -(155 + 1086)))) then v163=689 -(655 + 33) ;break;end if ((v231==(0 -0)) or ((42 + 2558)<2387)) then v164=v82[1 + 1 ];v165,v166=v77(v80[v164](v13(v80,v164 + 1 ,v82[724 -(433 + 288) ])));v231=3 -2 ;end end end if (((182 + 959)>=(1434 -(102 + 603))) and (v163==(2 -1))) then local v232=391 -(79 + 312) ;while true do if ((v232==(1370 -(956 + 413))) or ((2061 -(264 + 1635))>(4173 -(1088 + 583)))) then v163=2 + 0 ;break;end if ((v232==(1259 -(575 + 684))) or ((5454 -(1449 + 268))<=(5279 -((2413 -(419 + 326)) + 219)))) then v69=(v166 + v164) -(1788 -(69 + 1718)) ;v167=1299 -(1111 + 188) ;v232=2 -(1 + 0) ;end end end if ((v163==(1727 -(1345 + 380))) or ((765 -(1661 -(685 + 760)))==(5055 -(239 + (295 -(213 + 7)))))) then for v242=v164,v69 do local v243=0 + 0 ;local v244;while true do if (((0 -0)==v243) or ((446 + (1025 -653))>(2699 + 2185))) then v244=0;while true do if ((v244==(0 -0)) or ((362 + 3997)<=2808)) then v167=v167 + 1 + 0 ;v80[v242]=v165[v167];break;end end break;end end end break;end end break;end if ((v162==((992 -(85 + 906)) -0)) or (4270>=(7267 -2447))) then v165=nil;v166=nil;v162=1 + 1 + 0 ;end end else local v168=0 + 0 ;local v169;local v170;local v171;local v172;while true do if ((v168==(0 + 0)) or (4674<(776 -(77 + 409)))) then v169=0 -0 ;v170=nil;v168=2 -1 ;end if (((1395 -(89 + 1305))==v168) or ((994 -633)>=(549 + (3375 -(122 + 1267))))) then v171=nil;v172=nil;v168=1 + 1 ;end if ((v168==2) or ((1114 -430)<(484 + 67))) then while true do if ((v169==(0 -0)) or ((2888 -(135 + 98))==(1648 + 1072))) then local v233=0 + 0 ;while true do if ((v233==(1 + 0 + 0)) or ((2728 -1614)<(113 + 734))) then v169=1784 -(1343 + 440) ;break;end if ((v233==(0 + 0)) or ((729 + 262)==(197 + 225))) then v170=0;v171=nil;v233=1;end end end if ((v169==(1899 -((4135 -2746) + 509))) or ((11277 -6430)<=3994)) then v172=nil;while true do if ((((3588 + 1489) -2914)<3839) and ((1186 -(127 + 1039 + 19))==v170)) then for v263=v171 + 1 ,v82[1108 -(435 + 670) ] do v7(v172,v80[v263]);end break;end if ((v170==(0 + (981 -(872 + 109)))) or ((1312 + 1576)>((3450 + 784) -((1793 -(1126 + 451)) + 752)))) then local v254=0 + 0 ;local v255;while true do if (((2751 -(1382 + 93))==((1529 -(579 + 341)) + 667)) and (v254==(0 -0))) then v255=0;while true do if (((6422 -4568)==(2829 -(503 + 472))) and (v255==1)) then v170=1 + 0 ;break;end if (((5251 -2343)==(4614 -(936 + 770))) and (v255==(0 + 0))) then local v299=0 -0 ;while true do if ((1==v299) or ((4809 -(1591 + 227))==4018)) then v255=4 -3 ;break;end if (((5610 -(1047 + 810 + 58))<(5996 -(958 + 490))) and (v299==(0 -0))) then v171=v82[1206 -((660 -(61 + 448)) + 1053) ];v172=v80[v171];v299=1 + 0 ;end end end end break;end end end end break;end end break;end end end elseif (((3591 -(68 + 29))>(2176 -(60 + 213))) and (v83<=(6 + 17))) then if (((439 + 4139)>((3747 + 2619) -3173)) and (v83<=(36 -17))) then if ((v83<=17) or ((3564 + 547)==(1232 + 186))) then if ((v83==16) or ((159 + 410)>=(3048 -(1006 + 610)))) then v80[v82[5 -3 ]]=v80[v82[7 -4 ]];elseif (((5547 -(1177 + 42))<=4618) and (v80[v82[4 -2 ]]==v80[v82[(8 -6) + 2 ]])) then v68=v68 + (1968 -(1020 + 947)) ;else v68=v82[14 -11 ];end elseif ((v83>(1300 -(539 + 743))) or ((264 -157)==((329 -(29 + 29)) + 173))) then local v175=0 + 0 ;local v176;local v177;local v178;local v179;local v180;while true do if (((4064 -1854)>=(4038 -2665)) and (v175==(1 + 0))) then v178=nil;v179=nil;v175=2 + 0 + 0 ;end if (((3127 -(1569 + 400))==(2248 -(459 + 631))) and ((531 -(308 + 221))==v175)) then v180=nil;while true do if (((14 + 2)==(42 -26)) and ((760 -(21 + 739))==v176)) then v177=0 + 0 ;v178=nil;v176=1;end if ((((458 -(115 + 32)) + 3670)>(1070 -709)) and (v176==2)) then while true do if ((2663>(2220 -(329 + 7))) and (v177==1)) then local v256=0;while true do if ((((4685 + 1855) -2022)>(1746 + 2739)) and (v256==1)) then v177=885 -(177 + 706) ;break;end if ((v256==(0 -0)) or ((1077 -(79 + 3))>2682)) then v180={};v179=v10({},{__index=function(v286,v287)local v288=0 + 0 ;local v289;while true do if (((0 + 0 + 0)==v288) or ((507 + (1059 -(366 + 171)))>=(1916 -(6 + 9)))) then local v304=0 + 0 ;while true do if ((v304==(0 -0)) or ((2550 -((1577 -783) + 745))<(757 + (192 -98)))) then v289=v180[v287];return v289[3 -2 ][v289[2]];end end end end end,__newindex=function(v290,v291,v292)local v293=(4085 -3066) -(686 + 333) ;local v294;local v295;local v296;while true do if ((v293==((1 -0) + (0 -0))) or (2356<2014)) then v296=nil;while true do if ((4290<=(6124 -(1337 + (961 -561)))) and (v294==(112 -(45 + 67)))) then local v322=1793 -(1763 + 30) ;while true do if ((v322==(0 + 0)) or ((1493 -(125 + 583))>3305)) then v295=379 -(123 + 256) ;v296=nil;v322=1 + 0 ;end if ((v322==(1 + (0 -0))) or (((3319 -1972) + 2119)<(2351 + 240))) then v294=1 -0 ;break;end end end if ((3467<=(5694 -(392 + 1195))) and (v294==(1416 -(1402 + 13)))) then while true do if ((v295==0) or (1501==2697)) then v296=v180[v291];v296[(591 -(70 + 519)) -(905 -(370 + 534)) ][v296[6 -4 ]]=v292;break;end end break;end end break;end if ((v293==(0 + 0)) or ((8986 -(6412 -(735 + 814)))<=1229)) then v294=(0 -0) -0 ;v295=nil;v293=(1887 -1060) -(721 + 105) ;end end end});v256=1;end end end if (((308 -(194 + 112))==v177) or (1437>=(4117 -1541))) then for v264=1,v82[4] do local v265=1590 -(718 + 872) ;local v266;local v267;local v268;while true do if (((3631 -(158 + 317))==(8066 -4910)) and (v265==(0 + 0 + 0))) then v266=(1617 -(685 + 932)) -0 ;v267=nil;v265=341 -(282 + 58) ;end if ((4620>=2117) and (v265==1)) then v268=nil;while true do if ((v266==(0 -0)) or (934>=((1966 + 9090) -8385))) then local v305=0 -0 ;while true do if ((v305==(688 -(243 + 445))) or (1853==(332 + 440 + 961))) then v267=0;v268=nil;v305=318 -(208 + (358 -249)) ;end if ((v305==(235 -(123 + 111))) or (3071<(3169 -(190 + 410)))) then v266=1613 -(261 + 1351) ;break;end end end if (((2543 -(154 + 1127 + 69))==(1942 -(433 + 316))) and ((2 -1)==v266)) then while true do if (((1 + (1494 -(504 + 990)))==v267) or (3585>=((4372 + 1376) -(927 + 1012)))) then if (((16005 -11419)>(4057 -(363 + 93))) and (v268[(977 + 878) -(1302 + 552) ]==(4 + 12))) then v180[v264-1 ]={v80,v268[3 + 0 ]};else v180[v264-((1037 -(56 + 980)) -0) ]={v32,v268[1 + (2 -0) ]};end v79[ #v79 + 1 ]=v180;break;end if ((0==v267) or ((4508 -(27 + 849))==(4048 -(191 + 649)))) then local v324=471 -(189 + 282) ;local v325;while true do if ((2<(11493 -7448)) and (v324==(1513 -(342 + 1171)))) then v325=0 -0 ;while true do if (((1433 -782)<(6127 -3645)) and (v325==(4 -3))) then v267=1;break;end if (((0 + (0 -0))==v325) or ((65 + 369)>=(4412 -(604 + 275)))) then local v343=0;while true do if ((v343==((2770 -(599 + 1334)) -(40 + 797))) or ((1888 -(957 + 271))>=(996 + 1805))) then v68=v68 + (1230 -(663 + 566)) + 0 ;v268=v74[v68];v343=2 -1 ;end if (((12049 -7883)>=(79 + 1121)) and (v343==(1 + 0 + 0))) then v325=1 -0 ;break;end end end end break;end end end end break;end end break;end end end v80[v82[2]]=v30(v178,v179,v33);break;end if ((v177==(0 + 0)) or (2041>=(3353 -(644 + 4)))) then local v258=(283 -(27 + 256)) + 0 ;local v259;while true do if ((v258==(0 + 0)) or ((5 + 69)==(1892 + 751))) then v259=0 -0 ;while true do if ((v259==((0 + 0) -0)) or ((5035 -(615 + 44))<=(3631 -(616 + 44)))) then local v300=799 -(690 + 109) ;while true do if ((((268 + 322) -(538 + 51))==v300) or ((3897 -(294 + (263 -132)))<1704)) then v259=1 + 0 ;break;end if (((1092 -707)<=((6801 + 12376) -(8775 + 6412))) and (v300==(0 + 0))) then v178=v75[v82[2 + 1 ]];v179=nil;v300=1229 -(207 + 1021) ;end end end if (((305 + 181)<3987) and (v259==(847 -(402 + 444)))) then v177=1 + 0 + 0 ;break;end end break;end end end end break;end if ((v176==(2 -1)) or (4404>=(4905 -(327 + 24)))) then local v234=0 + 0 ;while true do if ((v234==1) or ((8247 -3290)<=(588 -266))) then v176=2 + (0 -0) ;break;end if ((v234==((0 -0) -0)) or ((5654 -(982 + (260 -193)))==(298 -91))) then v179=nil;v180=nil;v234=1;end end end end break;end if ((v175==(0 -0)) or ((4002 -(540 + 100))<3294)) then v176=0 + 0 ;v177=nil;v175=(4 -2) -1 ;end end else v80[v82[2]]=v30(v75[v82[3 + 0 ]],nil,v33);end elseif (((5229 -((1331 -(432 + 238)) + 51))>=640) and (v83<=(283 -(130 + 132)))) then if ((1371<=3326) and (v83==(8 + 12))) then v80[v82[1289 -(1027 + 260) ]][v80[v82[3]]]=v82[1 + 2 + (3 -2) ];else v80[v82[2]]=v33[v82[4 -1 ]];end elseif ((4381>(3491 -(438 + 4))) and (v83>(829 -(59 + 748)))) then local v186=0 + 0 ;local v187;local v188;local v189;while true do if ((v186==(0 + 0)) or (1965<=(134 + 147))) then v187=0 + 0 + 0 ;v188=nil;v186=1 + 0 ;end if (((8135 -(6188 -(402 + 409)))<((17257 -12037) -(1138 + 340))) and (v186==(1998 -(938 + 1059)))) then v189=nil;while true do if (((2626 + 2100)==(5016 -(250 + 40))) and (v187==(1623 -(392 + 1230)))) then v80[v188 + (1159 -(300 + 858)) ]=v189;v80[v188]=v189[v82[601 -(206 + 391) ]];break;end if (((2449 -1620)>543) and (v187==(261 -(232 + 29)))) then v188=v82[1486 -((4154 -2938) + 268) ];v189=v80[v82[10 -7 ]];v187=1;end end break;end end else v80[v82[(873 + 106) -(845 + 132) ]]={};end elseif ((v83<=((408 -(161 + 238)) + 18)) or ((3044 -(1095 + 523))>=(2509 -(69 + 557)))) then if ((v83<=(7 + 18)) or (3691<=((1692 -894) + 144))) then if ((v83>(72 -48)) or ((11154 -8208)==(1074 + 2290))) then v80[v82[4 -2 ]]=v32[v82[3]];else do return;end end elseif (((954 + 77 + 1789)==(4116 -(827 + 469))) and (v83==(62 -36))) then local v193=0 -(0 -0) ;local v194;local v195;local v196;local v197;local v198;while true do if (((1 + 1)==v193) or ((1467 -(345 + 905))>1219)) then v198=nil;while true do if (((9 + 201 + 383)<(1260 + 464 + 611)) and (v194==(1 + 0))) then local v240=0 + 0 ;while true do if (((4750 -3275)>(2217 -(428 + 445))) and (v240==(1862 -(1132 + 729)))) then v194=2 -0 ;break;end if (((337 -124)<(15838 -(54760 -42995))) and (((0 + 0) -0)==v240)) then v197=nil;v198=nil;v240=1 + 0 ;end end end if ((0==v194) or ((895 + (5295 -4061))==(1622 -(38 + 446)))) then v195=1736 -(567 + 1169) ;v196=nil;v194=1 + 0 ;end if ((v194==((1 + 1) -0)) or (3600<(343 -(76 + 210)))) then while true do if ((v195==(2 -1)) or (4651<=(696 + 2419))) then v198=v82[5 -2 ];for v269=1 -0 ,v198 do v197[v269]=v80[v196 + v269 ];end break;end if ((2189<4947) and (v195==0)) then local v261=0 -(0 + 0) ;while true do if ((v261==1) or ((723 + 323)>=((25372 -19175) -((3008 -(977 + 866)) + 137)))) then v195=1;break;end if (((2595 -(148 + 842))>1287) and (v261==0)) then local v282=0 + 0 ;while true do if (((3787 + 2)<=(12257 -7657)) and ((1 -0)==v282)) then v261=522 -(146 + 375) ;break;end if ((v282==(0 -0)) or (2480==1355)) then v196=v82[478 -(91 + 385) ];v197=v80[v196];v282=1 + (926 -(808 + 118)) ;end end end end end end break;end end break;end if (((1 + (0 -0))==v193) or ((1503 -(752 + 146))>(6734 -(741 + 1005)))) then v196=nil;v197=nil;v193=2 + 0 ;end if (((212 + 756)<1852) and (v193==(0 -0))) then v194=0;v195=nil;v193=3 -2 ;end end elseif ((v82[914 -(742 + 101 + 69) ]==v80[v82[8 -4 ]]) or ((3641 -(603 + 530))<((4340 -(1083 + 492)) -1285))) then v68=v68 + (1 -0) ;else v68=v82[3 + 0 ];end elseif ((v83<=29) or ((7823 -3874)<1902)) then if (((3490 -1200)>(2254 -1666)) and (v83>(42 -14))) then local v199=0 -0 ;local v200;local v201;local v202;local v203;while true do if (((5 -3)==v199) or ((2679 -1873)>(4325 -2266))) then while true do if ((v200==(1296 -(378 + 917))) or (3586==((5864 + 2811) -(864 + 3054)))) then v203=nil;while true do if (((7070 -2242)==(1709 + 1324 + 1795)) and ((1790 -(585 + 1204))==v201)) then for v272=(1 + 2) -2 , #v79 do local v273=0 + 0 ;local v274;local v275;while true do if (((3041 -(1208 + 411))<(7772 -2950)) and (v273==(926 -(688 + 238)))) then local v297=0;while true do if ((v297==(0 + 0)) or ((3960 -(919 + 319))>(12803 -7838))) then v274=0;v275=nil;v297=3 -2 ;end if (((1 + 0)==v297) or ((876 + 218)<(50 + 58))) then v273=1 + 0 ;break;end end end if (((4497 -2480)<=(1201 + 1406)) and (1==v273)) then while true do if ((v274==((716 -(243 + 192)) -(220 + 61))) or ((1765 + 81)>=(4202 -(450 + 833)))) then v275=v79[v272];for v311=339 -(22 + 317) , #v275 do local v312=924 -(394 + 530) ;local v313;local v314;local v315;while true do if (((1114 -(713 + 401))==v312) or (2649==3944)) then local v326=871 -(650 + 221) ;while true do if (((11946 -7206)>(2095 -1009)) and ((79 -(20 + 58))==v326)) then v312=1;break;end if ((v326==(0 -0)) or ((2312 -(1216 + 188 + 257))>3941)) then v313=v275[v311];v314=v313[1];v326=1122 -(735 + 386) ;end end end if ((v312==(1 + 0)) or ((2026 + 343)<=(516 -(36 + 6)))) then v315=v313[8 -6 ];if (((v314==v80) and (v315>=v202)) or (((4913 -(1116 + 270)) + 1085)==9)) then local v334=0 + 0 ;local v335;local v336;while true do if (((8060 -5058)<=4260) and (v334==(2 -1))) then while true do if (((4788 -(73 + 400))>(5558 -(271 + 1397))) and (v335==0)) then v336=0 + 0 ;while true do if ((0==v336) or (1393<=874)) then v203[v315]=v314[v315];v313[2 -(1 -0) ]=v203;break;end end break;end end break;end if ((2316>=709) and (v334==(1134 -(541 + 593)))) then v335=0 -0 ;v336=nil;v334=90 -(12 + 42 + 35) ;end end end break;end end end break;end end break;end end end break;end if (((4043 -(3435 -(1071 + 433)))<=(3598 -((3237 -2208) + 162))) and (v201==((4263 -3169) -(1041 + 53)))) then local v262=0 + 0 ;while true do if ((v262==(0 + (0 -0))) or ((4839 -(1126 + 100))<((4573 -(148 + 1516)) -(6 + 7)))) then local v283=989 -(871 + 118) ;while true do if (((1352 + 954)>=(2088 -1214)) and (v283==1)) then v262=1535 -(585 + 949) ;break;end if (((2332 -(244 + 297))<(3730 -(238 + 327))) and (v283==(881 -(760 + 121)))) then v202=v82[1294 -(614 + 678) ];v203={};v283=(328 -(300 + 14)) -((962 -(341 + 611)) + 3) ;end end end if ((v262==(3 -2)) or ((2283 -952)>=(5220 -(346 + 422)))) then v201=2 -1 ;break;end end end end break;end if ((v200==(0 -0)) or ((1409 + 309)<=(7575 -(7127 -(635 + 441))))) then local v241=0 + 0 ;while true do if ((v241==(1983 -(1359 + 624))) or ((4333 -((2089 -(624 + 230)) + 594))<(291 + 2065))) then v201=0 -0 ;v202=nil;v241=582 -(221 + 360) ;end if (((6995 -4631)<=((13585 -8109) -(434 + 197))) and (v241==(3 -2))) then v200=405 -(174 + 230) ;break;end end end end break;end if ((v199==0) or ((5915 -((3409 -2242) + 285))<(6326 -3026))) then v200=0;v201=nil;v199=1 -(0 + 0) ;end if (((1886 + 1748)==(5350 -(1176 + 540))) and (v199==(677 -(562 + 114)))) then v202=nil;v203=nil;v199=1 + 1 ;end end else v80[v82[5 -3 ]]= not v80[v82[1676 -(1521 + 152) ]];end elseif ((v83>((1961 -(368 + 1586)) + 23)) or ((2796 -(1693 + 134))>1441)) then v80[v82[2]]();else v80[v82[2 -0 ]]=v80[v82[1306 -(15 + 1288) ]][v82[4 + 0 ]];end v68=v68 + 1 + (587 -(406 + 181)) ;break;end if ((4318==(2348 + 1970)) and (v93==0)) then local v120=0 -0 ;local v121;while true do if ((v120==(0 + 0)) or ((4084 -(588 + 1370))>((501 + 3634) -(306 + 98)))) then v121=1540 -(118 + 1422) ;while true do if (((1518 -(656 + 862))==v121) or ((2747 -1768)>=(1439 + 1221))) then local v128=0 -0 ;while true do if ((v128==((670 + 1165) -(190 + 1645))) or ((4722 -1474)<=(2360 -(170 + 359 + 49)))) then v82=v74[v68];v83=v82[1 + 0 ];v128=1 -0 ;end if ((v128==(1 -0)) or ((4432 -3463)==(4842 -3046))) then v121=1;break;end end end if ((128==128) and (1==v121)) then v93=1 + 0 ;break;end end break;end end end end break;end end break;end if ((v91==(0 -0)) or (1442>=(1147 + 782))) then v92=0 -0 ;v93=nil;v91=2 -1 ;end end end end A,B=v28(v11(v72));if  not A[1] then local v94=0;local v95;while true do if (v94==0) then v95=v31[4][v68] or "?" ;error("Script error at ["   .. v95   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end return v30(v29(),{},v17)(...);end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v37)if (v1(v37,2)==79) then local v84=0;while true do if (v84==0) then v20=v0(v3(v37,1,1));return "";end end else local v85=0;local v86;while true do if (v85==0) then v86=v2(v0(v37,16));if v20 then local v106=0;local v107;while true do if (1==v106) then return v107;end if (v106==0) then v107=v5(v86,v20);v20=nil;v106=1;end end else return v86;end break;end end end end);v21=nil;v18=1;end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v38=0;local v39;local v40;local v41;local v42;local v43;local v44;while true do local v73=0;while true do if (v73~=(1991 -(1870 + 120))) then else if (v38==(2 + 0)) then local v104=0;while true do if (v104~=0) then else for v111=1,v43 do local v112=0 -0 ;local v113;local v114;local v115;while true do if (v112~=(1824 -(608 + 1216))) then else v113=0 + 0 ;v114=nil;v112=1;end if (v112~=(3 -2)) then else v115=nil;while true do if (1~=v113) then else if (v114==1) then v115=v22()~=0 ;elseif (v114==(3 -1)) then v115=v25();elseif (v114==3) then v115=v26();end v44[v111]=v115;break;end if (v113==(0 -0)) then local v127=0;while true do if ((103 -(83 + 19))~=v127) then else v113=1;break;end if (v127==(0 + 0)) then v114=v22();v115=nil;v127=1;end end end end break;end end end v42[2 + 1 ]=v22();v104=1;end if (v104==1) then for v116=359 -(172 + 186) ,v24() do local v117=0;local v118;local v119;while true do if (0==v117) then v118=0;v119=nil;v117=1;end if (v117==(1459 -(601 + 857))) then while true do if ((1450 -(935 + 515))==v118) then v119=v22();if (v21(v119,1,1)==0) then local v129=142 -(43 + 99) ;local v130;local v131;local v132;local v133;local v134;local v135;while true do if (v129~=(695 -(552 + 141))) then else v134=nil;v135=nil;v129=3;end if (v129~=(0 + 0)) then else v130=0;v131=nil;v129=1;end if (v129==1) then v132=nil;v133=nil;v129=1 + 1 ;end if (v129==3) then while true do if (v130~=(2 -0)) then else v135=nil;while true do if (v131~=1) then else local v226=0 + 0 ;while true do if (v226~=(0 + 0)) then else local v245=0 + 0 ;while true do if (v245==0) then v134=nil;v135=nil;v245=1;end if (v245~=1) then else v226=531 -(246 + 284) ;break;end end end if (v226==(3 -2)) then v131=1 + 1 ;break;end end end if (v131~=(1226 -(179 + 1047))) then else local v227=0 + 0 ;local v228;while true do if (v227~=(0 + 0)) then else v228=0;while true do if (v228~=0) then else local v280=0;while true do if (v280~=1) then else v228=1;break;end if (v280~=0) then else v132=0 -0 ;v133=nil;v280=1 + 0 ;end end end if (v228==(2 -1)) then v131=1 + 0 ;break;end end break;end end end if (v131==2) then while true do if (v132==(0 + 0)) then local v246=0;local v247;while true do if (v246~=(0 + 0)) then else v247=0 -0 ;while true do if (v247==0) then local v298=117 -(38 + 79) ;while true do if (v298~=1) then else v247=4 -3 ;break;end if (v298==(0 -0)) then v133=v21(v119,1 + 1 ,523 -(175 + 345) );v134=v21(v119,4,6);v298=3 -2 ;end end end if (v247~=(1 -0)) then else v132=1;break;end end break;end end end if (v132==2) then local v248=506 -(253 + 253) ;local v249;local v250;while true do if ((0 + 0)==v248) then v249=619 -(372 + 247) ;v250=nil;v248=1;end if (v248==(1 + 0)) then while true do if (v249~=0) then else v250=0;while true do if (v250==1) then v132=7 -4 ;break;end if (v250==(0 + 0)) then local v316=0 + 0 ;while true do if (v316==(1 + 0)) then v250=1 + 0 ;break;end if (0~=v316) then else local v328=0;while true do if (v328==0) then if (v21(v134,649 -(299 + 349) ,1 + 0 )~=(206 -(203 + 2))) then else v135[2]=v44[v135[2]];end if (v21(v134,2,3 -1 )==1) then v135[3]=v44[v135[1 + 2 ]];end v328=1;end if ((332 -(14 + 317))==v328) then v316=2 -1 ;break;end end end end end end break;end end break;end end end if (v132==(1061 -(263 + 795))) then if (v21(v134,2 + 1 ,3)~=1) then else v135[4]=v44[v135[326 -(199 + 123) ]];end v39[v116]=v135;break;end if (v132~=1) then else local v252=0 -0 ;while true do if (v252==0) then local v281=0 -0 ;while true do if (v281~=(1 + 0)) then else v252=1;break;end if (v281~=(0 + 0)) then else v135={v23(),v23(),nil,nil};if (v133==0) then local v307=0;local v308;local v309;local v310;while true do if ((673 -(490 + 182))==v307) then v310=nil;while true do if ((1 -0)==v308) then while true do if (v309==(0 + 0)) then v310=0;while true do if (v310==0) then v135[3]=v23();v135[16 -12 ]=v23();break;end end break;end end break;end if (v308~=0) then else local v337=0 + 0 ;while true do if (v337==0) then v309=655 -(585 + 70) ;v310=nil;v337=1 + 0 ;end if (v337~=(1669 -(460 + 1208))) then else v308=2 -1 ;break;end end end end break;end if (v307==(364 -(280 + 84))) then v308=0 + 0 ;v309=nil;v307=1;end end elseif (v133==1) then v135[2 + 1 ]=v24();elseif (v133==2) then v135[7 -4 ]=v24() -(2^(5 + 11)) ;elseif (v133~=3) then else local v338=0;local v339;local v340;while true do if (v338~=(0 -0)) then else v339=0;v340=nil;v338=1 -0 ;end if (1==v338) then while true do if (0==v339) then v340=0;while true do if (0==v340) then v135[6 -3 ]=v24() -((924 -(477 + 445))^16) ;v135[1996 -(905 + 1087) ]=v23();break;end end break;end end break;end end end v281=3 -2 ;end end end if (v252~=(149 -(80 + 68))) then else v132=5 -3 ;break;end end end end break;end end break;end if (v130~=(924 -(411 + 512))) then else local v219=0;while true do if (v219~=(1 -0)) then else v130=1933 -(545 + 1386) ;break;end if (v219~=0) then else v133=nil;v134=nil;v219=1;end end end if (v130==(0 + 0)) then local v220=0;while true do if (v220==1) then v130=1 + 0 ;break;end if (v220==(0 + 0)) then v131=0 + 0 ;v132=nil;v220=1 -0 ;end end end end break;end end end break;end end break;end end end v38=1431 -(149 + 1279) ;break;end end end if (v38==(0 + 0)) then local v105=0;while true do if (v105==(2 -1)) then v41={};v38=1;break;end if (v105==(774 -(234 + 540))) then v39={};v40={};v105=1344 -(449 + 894) ;end end end break;end if ((1267 -(346 + 921))==v73) then local v96=0;while true do if ((1 + 0)==v96) then v73=3 -2 ;break;end if (v96==0) then if (v38~=3) then else local v109=0 + 0 ;while true do if (v109==1) then return v42;end if ((0 + 0)~=v109) then else for v122=1 + 0 ,v24() do v40[v122-1 ]=v29();end for v124=1,v24() do v41[v124]=v24();end v109=1;end end end if (v38~=(804 -(761 + 42))) then else local v110=0 -0 ;while true do if (v110==0) then v42={v39,v40,nil,v41};v43=v24();v110=1;end if ((1941 -(646 + 1294))==v110) then v44={};v38=2;break;end end end v96=1 + 0 ;end end end end end end v18=5;end if (v18==2) then function v23()local v45=0;local v46;local v47;while true do if ((1 -0)==v45) then return (v47 * (74 + 182)) + v46 ;end if (v45==((0 + 0) -0)) then v46,v47=v1(v16,v19,v19 + ((50 -27) -(10 + 11)) );v19=v19 + 2 + 0 ;v45=1318 -(732 + 585) ;end end end v24=nil;function v24()local v48,v49,v50,v51=v1(v16,v19,v19 + 2 + 1 );v19=v19 + (863 -(146 + 24 + 689)) ;return (v51 * (3942032 + 12835184)) + (v50 * (17460 + 45862 + 2214)) + (v49 * (358 -102)) + v48 ;end v25=nil;v18=3;end if (v18==1) then function v21(v52,v53,v54)if v54 then local v87=(v52/((1522 -(618 + 902))^(v53-((1024 -(225 + 798)) -0))))%(((1564 -(698 + 865)) + 1)^(((v54-1) -(v53-1)) + (3 -(607 -(592 + 13))))) ;return v87-(v87%(1 -0)) ;else local v88=0;local v89;while true do if (v88==(1642 -(1534 + 108))) then v89=(6 -4)^(v53-(950 -(408 + 541))) ;return (((v52%(v89 + v89))>=v89) and (1849 -(1147 + 701))) or (409 -(391 + 18)) ;end end end end v22=nil;function v22()local v55=0 -0 ;local v56;while true do if (v55==(1 + 0)) then return v56;end if (v55==((224 -122) -(56 + 46))) then v56=v1(v16,v19,v19);v19=v19 + (1568 -(1126 + (1932 -(1196 + 295)))) ;v55=1842 -(1295 + 546) ;end end end v23=nil;v18=2;end if (3==v18) then function v25()local v57=0;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v57==(0 -0)) then v58=v24();v59=v24();v57=1 + 0 ;end if (v57==(7 -5)) then v62=v21(v59,688 -(523 + 144) ,56 -25 );v63=((v21(v59,90 -58 )==(1 -0)) and  -(1678 -(1583 + (106 -(4 + 8))))) or (331 -(165 + 165)) ;v57=8 -5 ;end if ((1 + 0 + 0)==v57) then v60=1723 -(1091 + 631) ;v61=(v21(v59,1,39 -(11 + 8) ) * ((1603 -(1158 + 443))^(32 + 0))) + v58 ;v57=5 -3 ;end if (3==v57) then if (v62==(0 + 0)) then if (v61==(0 -0)) then return v63 * 0 ;else v62=1890 -(913 + 976) ;v60=795 -(445 + 350) ;end elseif (v62==(1081 + 966)) then return ((v61==(0 + 0)) and (v63 * ((34 -(27 + 6))/(324 -(276 + 48))))) or (v63 * NaN) ;end return v8(v63,v62-(1427 -(399 + 5)) ) * (v60 + (v61/((1225 -(1096 + 127))^(19 + 33)))) ;end end end v26=nil;function v26(v64)local v65=0 + (0 -0) ;local v66;local v67;while true do if (v65==(2 + 1)) then return v6(v67);end if (v65==(2 + 0)) then v67={};for v97=1 + (818 -(402 + 416)) , #v66 do v67[v97]=v2(v1(v3(v66,v97,v97)));end v65=1 + 2 ;end if (v65==(0 + 0)) then v66=nil;if  not v64 then local v103=0 + 0 ;while true do if (v103==(264 -(156 + 108))) then v64=v24();if (v64==(0 + 0 + 0 + 0)) then return "";end break;end end end v65=1876 -(765 + 1110) ;end if (v65==(297 -(71 + 225))) then v66=v3(v16,v19,(v19 + v64) -(1 + (1279 -(357 + 922))) );v19=v19 + v64 ;v65=2 + 0 ;end end end v27=v24;v18=4;end end end vv9(),...);end
